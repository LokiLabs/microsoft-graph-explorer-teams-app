{"version":3,"sources":["webpack://microsoftTeams/webpack/universalModuleDefinition","webpack://microsoftTeams/webpack/bootstrap","webpack://microsoftTeams/./src/internal/globalVars.ts","webpack://microsoftTeams/./src/internal/internalAPIs.ts","webpack://microsoftTeams/./src/public/constants.ts","webpack://microsoftTeams/./src/internal/utils.ts","webpack://microsoftTeams/./src/internal/constants.ts","webpack://microsoftTeams/./src/public/interfaces.ts","webpack://microsoftTeams/./src/public/navigation.ts","webpack://microsoftTeams/./node_modules/uuid/lib/rng-browser.js","webpack://microsoftTeams/./node_modules/uuid/lib/bytesToUuid.js","webpack://microsoftTeams/./src/private/logs.ts","webpack://microsoftTeams/./src/public/settings.ts","webpack://microsoftTeams/./src/public/appWindow.ts","webpack://microsoftTeams/./src/public/media.ts","webpack://microsoftTeams/./src/index.ts","webpack://microsoftTeams/./src/private/index.ts","webpack://microsoftTeams/./src/private/bot.ts","webpack://microsoftTeams/./node_modules/uuid/index.js","webpack://microsoftTeams/./node_modules/uuid/v1.js","webpack://microsoftTeams/./node_modules/uuid/v4.js","webpack://microsoftTeams/./src/private/menus.ts","webpack://microsoftTeams/./src/private/interfaces.ts","webpack://microsoftTeams/./src/private/privateAPIs.ts","webpack://microsoftTeams/./src/private/conversations.ts","webpack://microsoftTeams/./src/private/meetingRoom.ts","webpack://microsoftTeams/./src/public/index.ts","webpack://microsoftTeams/./src/public/appInitialization.ts","webpack://microsoftTeams/./src/public/authentication.ts","webpack://microsoftTeams/./src/public/publicAPIs.ts","webpack://microsoftTeams/./src/public/tasks.ts","webpack://microsoftTeams/./src/internal/mediaUtil.ts","webpack://microsoftTeams/./src/public/location.ts","webpack://microsoftTeams/./src/public/meeting.ts"],"names":[],"mappings":"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","file":"MicrosoftTeams.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"microsoftTeams\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"microsoftTeams\"] = factory();\n\telse\n\t\troot[\"microsoftTeams\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","import { MessageRequest } from './interfaces';\r\nimport { ConversationResponse, LoadContext } from '../public/interfaces';\r\nimport { FrameContexts } from '../public';\r\nimport { meetingRoom } from '../private/meetingRoom';\r\nexport class GlobalVars {\r\n  public static initializeCalled: boolean = false;\r\n  public static initializeCompleted: boolean = false;\r\n  public static additionalValidOrigins: string[] = [];\r\n  public static additionalValidOriginsRegexp: RegExp = null;\r\n  public static initializeCallbacks: { (): void }[] = [];\r\n  public static currentWindow: Window | any;\r\n  public static parentWindow: Window | any;\r\n  public static isFramelessWindow: boolean = false;\r\n  public static parentOrigin: string;\r\n  public static frameContext: FrameContexts;\r\n  public static childWindow: Window;\r\n  public static childOrigin: string;\r\n  public static parentMessageQueue: MessageRequest[] = [];\r\n  public static childMessageQueue: MessageRequest[] = [];\r\n  public static nextMessageId: number = 0;\r\n  public static handlers: {\r\n    [func: string]: Function;\r\n  } = {};\r\n  public static callbacks: {\r\n    [id: number]: Function;\r\n  } = {};\r\n  public static hostClientType: string;\r\n  public static clientSupportedSDKVersion: string;\r\n  public static printCapabilityEnabled: boolean = false;\r\n  public static themeChangeHandler: (theme: string) => void;\r\n  public static fullScreenChangeHandler: (isFullScreen: boolean) => void;\r\n  public static backButtonPressHandler: () => boolean;\r\n  public static loadHandler: (context: LoadContext) => void;\r\n  public static beforeUnloadHandler: (readyToUnload: () => void) => boolean;\r\n  public static changeSettingsHandler: () => void;\r\n  public static onStartConversationHandler: (conversationResponse: ConversationResponse) => void;\r\n  public static onCloseConversationHandler: (conversationResponse: ConversationResponse) => void;\r\n  public static getLogHandler: () => string;\r\n  public static appButtonClickHandler: () => void;\r\n  public static appButtonHoverEnterHandler: () => void;\r\n  public static appButtonHoverLeaveHandler: () => void;\r\n  public static meetingRoomCapabilitiesUpdateHandler: (capabilities: meetingRoom.MeetingRoomCapability) => void;\r\n  public static meetingRoomStatesUpdateHandler: (states: meetingRoom.MeetingRoomState) => void;\r\n}\r\n","import { navigateBack } from '../../src/public/navigation';\r\nimport { LoadContext } from '../public/interfaces';\r\nimport { validOriginRegExp, userOriginUrlValidationRegExp, defaultSDKVersionForCompatCheck } from './constants';\r\nimport { GlobalVars } from './globalVars';\r\nimport { MessageResponse, MessageRequest, ExtendedWindow, DOMMessageEvent } from './interfaces';\r\nimport { generateRegExpFromUrls, compareSDKVersions } from './utils';\r\n\r\n// ::::::::::::::::::::MicrosoftTeams SDK Internal :::::::::::::::::\r\nGlobalVars.handlers['themeChange'] = handleThemeChange;\r\nGlobalVars.handlers['fullScreenChange'] = handleFullScreenChange;\r\nGlobalVars.handlers['backButtonPress'] = handleBackButtonPress;\r\nGlobalVars.handlers['load'] = handleLoad;\r\nGlobalVars.handlers['beforeUnload'] = handleBeforeUnload;\r\nGlobalVars.handlers['changeSettings'] = handleChangeSettings;\r\nGlobalVars.handlers['startConversation'] = handleStartConversation;\r\nGlobalVars.handlers['closeConversation'] = handleCloseConversation;\r\nGlobalVars.handlers['appButtonClick'] = handleAppButtonClick;\r\nGlobalVars.handlers['appButtonHoverEnter'] = handleAppButtonHoverEnter;\r\nGlobalVars.handlers['appButtonHoverLeave'] = handleAppButtonHoverLeave;\r\n\r\nfunction handleStartConversation(\r\n  subEntityId: string,\r\n  conversationId: string,\r\n  channelId: string,\r\n  entityId: string,\r\n): void {\r\n  if (GlobalVars.onStartConversationHandler) {\r\n    GlobalVars.onStartConversationHandler({\r\n      subEntityId: subEntityId,\r\n      conversationId: conversationId,\r\n      channelId: channelId,\r\n      entityId: entityId,\r\n    });\r\n  }\r\n}\r\n\r\nfunction handleCloseConversation(\r\n  subEntityId: string,\r\n  conversationId?: string,\r\n  channelId?: string,\r\n  entityId?: string,\r\n): void {\r\n  if (GlobalVars.onCloseConversationHandler) {\r\n    GlobalVars.onCloseConversationHandler({\r\n      subEntityId: subEntityId,\r\n      conversationId: conversationId,\r\n      channelId: channelId,\r\n      entityId: entityId,\r\n    });\r\n  }\r\n}\r\n\r\nfunction handleThemeChange(theme: string): void {\r\n  if (GlobalVars.themeChangeHandler) {\r\n    GlobalVars.themeChangeHandler(theme);\r\n  }\r\n\r\n  if (GlobalVars.childWindow) {\r\n    sendMessageEventToChild('themeChange', [theme]);\r\n  }\r\n}\r\n\r\nfunction handleFullScreenChange(isFullScreen: boolean): void {\r\n  if (GlobalVars.fullScreenChangeHandler) {\r\n    GlobalVars.fullScreenChangeHandler(isFullScreen);\r\n  }\r\n}\r\n\r\nfunction handleBackButtonPress(): void {\r\n  if (!GlobalVars.backButtonPressHandler || !GlobalVars.backButtonPressHandler()) {\r\n    navigateBack();\r\n  }\r\n}\r\n\r\nfunction handleLoad(context: LoadContext): void {\r\n  if (GlobalVars.loadHandler) {\r\n    GlobalVars.loadHandler(context);\r\n  }\r\n\r\n  if (GlobalVars.childWindow) {\r\n    sendMessageEventToChild('load', [context]);\r\n  }\r\n}\r\n\r\nfunction handleBeforeUnload(): void {\r\n  const readyToUnload = (): void => {\r\n    sendMessageRequestToParent('readyToUnload', []);\r\n  };\r\n\r\n  if (!GlobalVars.beforeUnloadHandler || !GlobalVars.beforeUnloadHandler(readyToUnload)) {\r\n    readyToUnload();\r\n  }\r\n}\r\n\r\nfunction handleChangeSettings(): void {\r\n  if (GlobalVars.changeSettingsHandler) {\r\n    GlobalVars.changeSettingsHandler();\r\n  }\r\n}\r\n\r\nfunction handleAppButtonClick(): void {\r\n  if (GlobalVars.appButtonClickHandler) {\r\n    GlobalVars.appButtonClickHandler();\r\n  }\r\n}\r\n\r\nfunction handleAppButtonHoverEnter(): void {\r\n  if (GlobalVars.appButtonHoverEnterHandler) {\r\n    GlobalVars.appButtonHoverEnterHandler();\r\n  }\r\n}\r\n\r\nfunction handleAppButtonHoverLeave(): void {\r\n  if (GlobalVars.appButtonHoverLeaveHandler) {\r\n    GlobalVars.appButtonHoverLeaveHandler();\r\n  }\r\n}\r\n\r\nexport function ensureInitialized(...expectedFrameContexts: string[]): void {\r\n  if (!GlobalVars.initializeCalled) {\r\n    throw new Error('The library has not yet been initialized');\r\n  }\r\n\r\n  if (GlobalVars.frameContext && expectedFrameContexts && expectedFrameContexts.length > 0) {\r\n    let found = false;\r\n    for (let i = 0; i < expectedFrameContexts.length; i++) {\r\n      if (expectedFrameContexts[i] === GlobalVars.frameContext) {\r\n        found = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!found) {\r\n      throw new Error(\"This call is not allowed in the '\" + GlobalVars.frameContext + \"' context\");\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Checks whether the platform has knowledge of this API by doing a comparison\r\n * on API required version and platform supported version of the SDK\r\n * @param requiredVersion SDK version required by the API\r\n */\r\nexport function isAPISupportedByPlatform(requiredVersion: string = defaultSDKVersionForCompatCheck): boolean {\r\n  const value = compareSDKVersions(GlobalVars.clientSupportedSDKVersion, requiredVersion);\r\n  if (isNaN(value)) {\r\n    return false;\r\n  }\r\n  return value >= 0;\r\n}\r\n\r\nexport function processMessage(evt: DOMMessageEvent): void {\r\n  // Process only if we received a valid message\r\n  if (!evt || !evt.data || typeof evt.data !== 'object') {\r\n    return;\r\n  }\r\n\r\n  // Process only if the message is coming from a different window and a valid origin\r\n  // valid origins are either a pre-known\r\n  const messageSource = evt.source || (evt.originalEvent && evt.originalEvent.source);\r\n  const messageOrigin = evt.origin || (evt.originalEvent && evt.originalEvent.origin);\r\n  if (!shouldProcessMessage(messageSource, messageOrigin)) {\r\n    return;\r\n  }\r\n\r\n  // Update our parent and child relationships based on this message\r\n  updateRelationships(messageSource, messageOrigin);\r\n\r\n  // Handle the message\r\n  if (messageSource === GlobalVars.parentWindow) {\r\n    handleParentMessage(evt);\r\n  } else if (messageSource === GlobalVars.childWindow) {\r\n    handleChildMessage(evt);\r\n  }\r\n}\r\n\r\n/**\r\n * Validates the message source and origin, if it should be processed\r\n */\r\nfunction shouldProcessMessage(messageSource: Window, messageOrigin: string): boolean {\r\n  // Process if message source is a different window and if origin is either in\r\n  // Teams' pre-known whitelist or supplied as valid origin by user during initialization\r\n  if (GlobalVars.currentWindow && messageSource === GlobalVars.currentWindow) {\r\n    return false;\r\n  } else if (\r\n    GlobalVars.currentWindow &&\r\n    GlobalVars.currentWindow.location &&\r\n    messageOrigin &&\r\n    messageOrigin === GlobalVars.currentWindow.location.origin\r\n  ) {\r\n    return true;\r\n  } else if (\r\n    validOriginRegExp.test(messageOrigin.toLowerCase()) ||\r\n    (GlobalVars.additionalValidOriginsRegexp &&\r\n      GlobalVars.additionalValidOriginsRegexp.test(messageOrigin.toLowerCase()))\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction updateRelationships(messageSource: Window, messageOrigin: string): void {\r\n  // Determine whether the source of the message is our parent or child and update our\r\n  // window and origin pointer accordingly\r\n  // For frameless windows (i.e mobile), there is no parent frame, so the message must be from the child.\r\n  if (\r\n    !GlobalVars.isFramelessWindow &&\r\n    (!GlobalVars.parentWindow || GlobalVars.parentWindow.closed || messageSource === GlobalVars.parentWindow)\r\n  ) {\r\n    GlobalVars.parentWindow = messageSource;\r\n    GlobalVars.parentOrigin = messageOrigin;\r\n  } else if (!GlobalVars.childWindow || GlobalVars.childWindow.closed || messageSource === GlobalVars.childWindow) {\r\n    GlobalVars.childWindow = messageSource;\r\n    GlobalVars.childOrigin = messageOrigin;\r\n  }\r\n\r\n  // Clean up pointers to closed parent and child windows\r\n  if (GlobalVars.parentWindow && GlobalVars.parentWindow.closed) {\r\n    GlobalVars.parentWindow = null;\r\n    GlobalVars.parentOrigin = null;\r\n  }\r\n  if (GlobalVars.childWindow && GlobalVars.childWindow.closed) {\r\n    GlobalVars.childWindow = null;\r\n    GlobalVars.childOrigin = null;\r\n  }\r\n\r\n  // If we have any messages in our queue, send them now\r\n  flushMessageQueue(GlobalVars.parentWindow);\r\n  flushMessageQueue(GlobalVars.childWindow);\r\n}\r\n\r\nexport function handleParentMessage(evt: DOMMessageEvent): void {\r\n  if ('id' in evt.data && typeof evt.data.id === 'number') {\r\n    // Call any associated GlobalVars.callbacks\r\n    const message = evt.data as MessageResponse;\r\n    const callback = GlobalVars.callbacks[message.id];\r\n    if (callback) {\r\n      callback.apply(null, [...message.args, message.isPartialResponse]);\r\n\r\n      // Remove the callback to ensure that the callback is called only once and to free up memory if response is a complete response\r\n      if (!isPartialResponse(evt)) {\r\n        delete GlobalVars.callbacks[message.id];\r\n      }\r\n    }\r\n  } else if ('func' in evt.data && typeof evt.data.func === 'string') {\r\n    // Delegate the request to the proper handler\r\n    const message = evt.data as MessageRequest;\r\n    const handler = GlobalVars.handlers[message.func];\r\n    if (handler) {\r\n      // We don't expect any handler to respond at this point\r\n      handler.apply(this, message.args);\r\n    }\r\n  }\r\n}\r\n\r\nfunction isPartialResponse(evt: DOMMessageEvent): boolean {\r\n  return evt.data.isPartialResponse === true;\r\n}\r\n\r\nfunction handleChildMessage(evt: DOMMessageEvent): void {\r\n  if ('id' in evt.data && 'func' in evt.data) {\r\n    // Try to delegate the request to the proper handler, if defined\r\n    const message = evt.data as MessageRequest;\r\n    const handler = message.func ? GlobalVars.handlers[message.func] : null;\r\n    if (handler) {\r\n      const result = handler.apply(this, message.args);\r\n      if (typeof result !== 'undefined') {\r\n        sendMessageResponseToChild(message.id, Array.isArray(result) ? result : [result]);\r\n      }\r\n    } else {\r\n      // No handler, proxy to parent\r\n      const messageId = sendMessageRequestToParent(message.func, message.args);\r\n      // tslint:disable-next-line:no-any\r\n      GlobalVars.callbacks[messageId] = (...args: any[]): void => {\r\n        if (GlobalVars.childWindow) {\r\n          const isPartialResponse = args.pop();\r\n          sendMessageResponseToChild(message.id, args, isPartialResponse);\r\n        }\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Processes the valid origins specifuied by the user, de-duplicates and converts them into a regexp\r\n * which is used later for message source/origin validation\r\n */\r\nexport function processAdditionalValidOrigins(validMessageOrigins: string[]): void {\r\n  let combinedOriginUrls = GlobalVars.additionalValidOrigins.concat(\r\n    validMessageOrigins.filter((_origin: string) => {\r\n      return typeof _origin === 'string' && userOriginUrlValidationRegExp.test(_origin);\r\n    }),\r\n  );\r\n  let dedupUrls: { [url: string]: boolean } = {};\r\n  combinedOriginUrls = combinedOriginUrls.filter(_originUrl => {\r\n    if (dedupUrls[_originUrl]) {\r\n      return false;\r\n    }\r\n    dedupUrls[_originUrl] = true;\r\n    return true;\r\n  });\r\n  GlobalVars.additionalValidOrigins = combinedOriginUrls;\r\n  if (GlobalVars.additionalValidOrigins.length > 0) {\r\n    GlobalVars.additionalValidOriginsRegexp = generateRegExpFromUrls(GlobalVars.additionalValidOrigins);\r\n  } else {\r\n    GlobalVars.additionalValidOriginsRegexp = null;\r\n  }\r\n}\r\n\r\nfunction getTargetMessageQueue(targetWindow: Window): MessageRequest[] {\r\n  return targetWindow === GlobalVars.parentWindow\r\n    ? GlobalVars.parentMessageQueue\r\n    : targetWindow === GlobalVars.childWindow\r\n    ? GlobalVars.childMessageQueue\r\n    : [];\r\n}\r\n\r\nfunction getTargetOrigin(targetWindow: Window): string {\r\n  return targetWindow === GlobalVars.parentWindow\r\n    ? GlobalVars.parentOrigin\r\n    : targetWindow === GlobalVars.childWindow\r\n    ? GlobalVars.childOrigin\r\n    : null;\r\n}\r\n\r\nfunction flushMessageQueue(targetWindow: Window | any): void {\r\n  const targetOrigin = getTargetOrigin(targetWindow);\r\n  const targetMessageQueue = getTargetMessageQueue(targetWindow);\r\n  while (targetWindow && targetOrigin && targetMessageQueue.length > 0) {\r\n    targetWindow.postMessage(targetMessageQueue.shift(), targetOrigin);\r\n  }\r\n}\r\n\r\nexport function waitForMessageQueue(targetWindow: Window, callback: () => void): void {\r\n  const messageQueueMonitor = GlobalVars.currentWindow.setInterval(() => {\r\n    if (getTargetMessageQueue(targetWindow).length === 0) {\r\n      clearInterval(messageQueueMonitor);\r\n      callback();\r\n    }\r\n  }, 100);\r\n}\r\n\r\n/**\r\n * Send a message to parent. Uses nativeInterface on mobile to communicate with parent context\r\n */\r\nexport function sendMessageRequestToParent(\r\n  actionName: string,\r\n  // tslint:disable-next-line: no-any\r\n  args?: any[],\r\n): number {\r\n  const targetWindow = GlobalVars.parentWindow;\r\n  const request = createMessageRequest(actionName, args);\r\n  if (GlobalVars.isFramelessWindow) {\r\n    if (GlobalVars.currentWindow && GlobalVars.currentWindow.nativeInterface) {\r\n      (GlobalVars.currentWindow as ExtendedWindow).nativeInterface.framelessPostMessage(JSON.stringify(request));\r\n    }\r\n  } else {\r\n    const targetOrigin = getTargetOrigin(targetWindow);\r\n\r\n    // If the target window isn't closed and we already know its origin, send the message right away; otherwise,\r\n    // queue the message and send it after the origin is established\r\n    if (targetWindow && targetOrigin) {\r\n      targetWindow.postMessage(request, targetOrigin);\r\n    } else {\r\n      getTargetMessageQueue(targetWindow).push(request);\r\n    }\r\n  }\r\n  return request.id;\r\n}\r\n\r\n/**\r\n * Send a response to child for a message request that was from child\r\n */\r\nfunction sendMessageResponseToChild(\r\n  id: number,\r\n  // tslint:disable-next-line:no-any\r\n  args?: any[],\r\n  isPartialResponse?: boolean,\r\n): void {\r\n  const targetWindow = GlobalVars.childWindow;\r\n  const response = createMessageResponse(id, args, isPartialResponse);\r\n  const targetOrigin = getTargetOrigin(targetWindow);\r\n  if (targetWindow && targetOrigin) {\r\n    targetWindow.postMessage(response, targetOrigin);\r\n  }\r\n}\r\n\r\n/**\r\n * Send a custom message object that can be sent to child window,\r\n * instead of a response message to a child\r\n */\r\nexport function sendMessageEventToChild(\r\n  actionName: string,\r\n  // tslint:disable-next-line: no-any\r\n  args?: any[],\r\n): void {\r\n  const targetWindow = GlobalVars.childWindow;\r\n  const customEvent = createMessageEvent(actionName, args);\r\n  const targetOrigin = getTargetOrigin(targetWindow);\r\n\r\n  // If the target window isn't closed and we already know its origin, send the message right away; otherwise,\r\n  // queue the message and send it after the origin is established\r\n  if (targetWindow && targetOrigin) {\r\n    targetWindow.postMessage(customEvent, targetOrigin);\r\n  } else {\r\n    getTargetMessageQueue(targetWindow).push(customEvent);\r\n  }\r\n}\r\n\r\n// tslint:disable-next-line:no-any\r\nfunction createMessageRequest(func: string, args: any[]): MessageRequest {\r\n  return {\r\n    id: GlobalVars.nextMessageId++,\r\n    func: func,\r\n    args: args || [],\r\n  };\r\n}\r\n\r\n// tslint:disable-next-line:no-any\r\nfunction createMessageResponse(id: number, args: any[], isPartialResponse: boolean): MessageResponse {\r\n  return {\r\n    id: id,\r\n    args: args || [],\r\n    isPartialResponse: isPartialResponse,\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a message object without any id, used for custom actions being sent to child frame/window\r\n */\r\n// tslint:disable-next-line:no-any\r\nfunction createMessageEvent(func: string, args: any[]): MessageRequest {\r\n  return {\r\n    func: func,\r\n    args: args || [],\r\n  };\r\n}\r\n","export enum HostClientType {\r\n  desktop = 'desktop',\r\n  web = 'web',\r\n  android = 'android',\r\n  ios = 'ios',\r\n  rigel = 'rigel',\r\n}\r\n\r\n// Ensure these declarations stay in sync with the framework.\r\nexport enum FrameContexts {\r\n  settings = 'settings',\r\n  content = 'content',\r\n  authentication = 'authentication',\r\n  remove = 'remove',\r\n  task = 'task',\r\n  sidePanel = 'sidePanel',\r\n  stage = 'stage',\r\n}\r\n\r\n/**\r\n * Indicates the team type, currently used to distinguish between different team\r\n * types in Office 365 for Education (team types 1, 2, 3, and 4).\r\n */\r\nexport enum TeamType {\r\n  Standard = 0,\r\n  Edu = 1,\r\n  Class = 2,\r\n  Plc = 3,\r\n  Staff = 4,\r\n}\r\n\r\n/**\r\n * Indicates the various types of roles of a user in a team.\r\n */\r\nexport enum UserTeamRole {\r\n  Admin = 0,\r\n  User = 1,\r\n  Guest = 2,\r\n}\r\n\r\n/**\r\n * Task module dimension enum\r\n */\r\nexport enum TaskModuleDimension {\r\n  Large = 'large',\r\n  Medium = 'medium',\r\n  Small = 'small',\r\n}\r\n\r\n/**\r\n * The type of the channel with which the content is associated.\r\n */\r\nexport enum ChannelType {\r\n  Regular = 'Regular',\r\n  Private = 'Private',\r\n}\r\n","import * as uuid from 'uuid';\r\n// This will return a reg expression a given url\r\nfunction generateRegExpFromUrl(url: string): string {\r\n  let urlRegExpPart = '^';\r\n  const urlParts = url.split('.');\r\n  for (let j = 0; j < urlParts.length; j++) {\r\n    urlRegExpPart += (j > 0 ? '[.]' : '') + urlParts[j].replace('*', '[^/^.]+');\r\n  }\r\n  urlRegExpPart += '$';\r\n  return urlRegExpPart;\r\n}\r\n\r\n// This will return a reg expression for list of url\r\nexport function generateRegExpFromUrls(urls: string[]): RegExp {\r\n  let urlRegExp = '';\r\n  for (let i = 0; i < urls.length; i++) {\r\n    urlRegExp += (i === 0 ? '' : '|') + generateRegExpFromUrl(urls[i]);\r\n  }\r\n  return new RegExp(urlRegExp);\r\n}\r\n\r\nexport function getGenericOnCompleteHandler(errorMessage?: string): (success: boolean, reason?: string) => void {\r\n  return (success: boolean, reason: string): void => {\r\n    if (!success) {\r\n      throw new Error(errorMessage ? errorMessage : reason);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Compares SDK versions.\r\n * @param v1 first version\r\n * @param v2 second version\r\n * returns NaN in case inputs are not in right format\r\n *         -1 if v1 < v2\r\n *          1 if v1 > v2\r\n *          0 otherwise\r\n * For example,\r\n *    compareSDKVersions('1.2', '1.2.0') returns 0\r\n *    compareSDKVersions('1.2a', '1.2b') returns NaN\r\n *    compareSDKVersions('1.2', '1.3') returns -1\r\n *    compareSDKVersions('2.0', '1.3.2') returns 1\r\n *    compareSDKVersions('2.0', 2.0) returns NaN\r\n */\r\nexport function compareSDKVersions(v1: string, v2: string): number {\r\n  if (typeof v1 !== 'string' || typeof v2 !== 'string') {\r\n    return NaN;\r\n  }\r\n\r\n  const v1parts = v1.split('.');\r\n  const v2parts = v2.split('.');\r\n\r\n  function isValidPart(x: string): boolean {\r\n    // input has to have one or more digits\r\n    // For ex - returns true for '11', false for '1a1', false for 'a', false for '2b'\r\n    return /^\\d+$/.test(x);\r\n  }\r\n\r\n  if (!v1parts.every(isValidPart) || !v2parts.every(isValidPart)) {\r\n    return NaN;\r\n  }\r\n\r\n  // Make length of both parts equal\r\n  while (v1parts.length < v2parts.length) {\r\n    v1parts.push('0');\r\n  }\r\n  while (v2parts.length < v1parts.length) {\r\n    v2parts.push('0');\r\n  }\r\n\r\n  for (let i = 0; i < v1parts.length; ++i) {\r\n    if (v1parts[i] == v2parts[i]) {\r\n      continue;\r\n    } else if (v1parts[i] > v2parts[i]) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Generates a GUID\r\n */\r\nexport function generateGUID(): string {\r\n  return uuid.v4();\r\n}\r\n","import { generateRegExpFromUrls } from './utils';\r\n\r\nexport const version = '1.9.0';\r\n/**\r\n * This is the SDK version when all SDK APIs started to check platform compatibility for the APIs.\r\n */\r\nexport const defaultSDKVersionForCompatCheck = '1.6.0';\r\n\r\n/**\r\n * List of supported Host origins\r\n */\r\nexport const validOrigins = [\r\n  'https://teams.microsoft.com',\r\n  'https://teams.microsoft.us',\r\n  'https://gov.teams.microsoft.us',\r\n  'https://dod.teams.microsoft.us',\r\n  'https://int.teams.microsoft.com',\r\n  'https://teams.live.com',\r\n  'https://devspaces.skype.com',\r\n  'https://ssauth.skype.com',\r\n  'https://local.teams.office.com', // local development\r\n  'https://local.teams.office.com:8080', // local development\r\n  'https://msft.spoppe.com',\r\n  'https://*.sharepoint.com',\r\n  'https://*.sharepoint-df.com',\r\n  'https://*.sharepointonline.com',\r\n  'https://outlook.office.com',\r\n  'https://outlook-sdf.office.com',\r\n  'https://*.teams.microsoft.com',\r\n  'https://www.office.com',\r\n  'https://word.office.com',\r\n  'https://excel.office.com',\r\n  'https://powerpoint.office.com',\r\n  'https://www.officeppe.com',\r\n  'https://*.www.office.com',\r\n  'http://127.0.0.1:5000', // local Development\r\n];\r\n\r\nexport const validOriginRegExp = generateRegExpFromUrls(validOrigins);\r\n\r\n/**\r\n * USer specified message origins should satisfy this test\r\n */\r\nexport const userOriginUrlValidationRegExp = /^https\\:\\/\\//;\r\n","import { TaskModuleDimension, HostClientType, TeamType, UserTeamRole, ChannelType } from './constants';\r\nimport { FrameContexts } from './constants';\r\n\r\n/**\r\n * Represents information about tabs for an app\r\n */\r\nexport interface TabInformation {\r\n  teamTabs: TabInstance[];\r\n}\r\n\r\n/**\r\n * Represents information about a tab instance\r\n */\r\nexport interface TabInstance {\r\n  /**\r\n   * The name of the tab\r\n   */\r\n  tabName: string;\r\n\r\n  /**\r\n   * Internal: do not use\r\n   * @protected\r\n   */\r\n  internalTabInstanceId?: string;\r\n\r\n  /**\r\n   * Last viewed time of this tab. null means unknown\r\n   */\r\n  lastViewUnixEpochTime?: string;\r\n\r\n  /**\r\n   * The developer-defined unique ID for the entity this content points to.\r\n   */\r\n  entityId?: string;\r\n\r\n  /**\r\n   * The Microsoft Teams ID for the channel with which the content is associated.\r\n   */\r\n  channelId?: string;\r\n\r\n  /**\r\n   * The name for the channel with which the content is associated.\r\n   */\r\n  channelName?: string;\r\n\r\n  /**\r\n   * Is this tab in a favorite channel?\r\n   */\r\n  channelIsFavorite?: boolean;\r\n\r\n  /**\r\n   * The Microsoft Teams ID for the team with which the content is associated.\r\n   */\r\n  teamId?: string;\r\n\r\n  /**\r\n   * The name for the team with which the content is associated.\r\n   */\r\n  teamName?: string;\r\n\r\n  /**\r\n   * Is this tab in a favorite team?\r\n   */\r\n  teamIsFavorite?: boolean;\r\n\r\n  /**\r\n   * The Office 365 group ID for the team with which the content is associated.\r\n   * This field is available only when the identity permission is requested in the manifest.\r\n   */\r\n  groupId?: string;\r\n\r\n  /**\r\n   * Content URL of this tab\r\n   */\r\n  url?: string;\r\n\r\n  /**\r\n   * Website URL of this tab\r\n   */\r\n  websiteUrl?: string;\r\n}\r\n\r\n/**\r\n * Indicates information about the tab instance for filtering purposes.\r\n */\r\nexport interface TabInstanceParameters {\r\n  /**\r\n   * Flag allowing to select favorite channels only\r\n   */\r\n  favoriteChannelsOnly?: boolean;\r\n\r\n  /**\r\n   * Flag allowing to select favorite teams only\r\n   */\r\n  favoriteTeamsOnly?: boolean;\r\n}\r\n\r\n/**\r\n * Represents Team Information\r\n */\r\nexport interface TeamInformation {\r\n  /**\r\n   * Id of the team\r\n   */\r\n  teamId: string;\r\n\r\n  /**\r\n   * Team display name\r\n   */\r\n  teamName: string;\r\n\r\n  /**\r\n   * Team description\r\n   */\r\n  teamDescription?: string;\r\n\r\n  /**\r\n   * Thumbnail Uri\r\n   */\r\n  thumbnailUri?: string;\r\n\r\n  /**\r\n   * The Office 365 group ID for the team with which the content is associated.\r\n   * This field is available only when the identity permission is requested in the manifest.\r\n   */\r\n  groupId?: string;\r\n\r\n  /**\r\n   * Role of current user in the team\r\n   */\r\n  userTeamRole?: UserTeamRole;\r\n\r\n  /**\r\n   * The type of the team.\r\n   */\r\n  teamType?: TeamType;\r\n\r\n  /**\r\n   * The locked status of the team\r\n   */\r\n  isTeamLocked?: boolean;\r\n\r\n  /**\r\n   * The archived status of the team\r\n   */\r\n  isTeamArchived?: boolean;\r\n}\r\n\r\n/**\r\n * Represents OS locale info used for formatting date and time data\r\n */\r\nexport interface LocaleInfo {\r\n  platform: 'windows' | 'macos';\r\n  regionalFormat: string;\r\n  shortDate: string;\r\n  longDate: string;\r\n  shortTime: string;\r\n  longTime: string;\r\n}\r\n\r\nexport interface Context {\r\n  /**\r\n   * The Office 365 group ID for the team with which the content is associated.\r\n   * This field is available only when the identity permission is requested in the manifest.\r\n   */\r\n  groupId?: string;\r\n\r\n  /**\r\n   * The Microsoft Teams ID for the team with which the content is associated.\r\n   */\r\n  teamId?: string;\r\n\r\n  /**\r\n   * The name for the team with which the content is associated.\r\n   */\r\n  teamName?: string;\r\n\r\n  /**\r\n   * The Microsoft Teams ID for the channel with which the content is associated.\r\n   */\r\n  channelId?: string;\r\n\r\n  /**\r\n   * The name for the channel with which the content is associated.\r\n   */\r\n  channelName?: string;\r\n\r\n  /**\r\n   * The type of the channel with which the content is associated.\r\n   */\r\n  channelType?: ChannelType;\r\n\r\n  /**\r\n   * The developer-defined unique ID for the entity this content points to.\r\n   */\r\n  entityId: string;\r\n\r\n  /**\r\n   * The developer-defined unique ID for the sub-entity this content points to.\r\n   * This field should be used to restore to a specific state within an entity,\r\n   * such as scrolling to or activating a specific piece of content.\r\n   */\r\n  subEntityId?: string;\r\n\r\n  /**\r\n   * The current locale that the user has configured for the app formatted as\r\n   * languageId-countryId (for example, en-us).\r\n   */\r\n  locale: string;\r\n\r\n  /**\r\n   * More detailed locale info from the user's OS if available. Can be used together with\r\n   * the @microsoft/globe NPM package to ensure your app respects the user's OS date and\r\n   * time format configuration\r\n   */\r\n  osLocaleInfo?: LocaleInfo;\r\n\r\n  /**\r\n   * @deprecated Use loginHint or userPrincipalName.\r\n   * The UPN of the current user.\r\n   * Because a malicious party can run your content in a browser, this value should\r\n   * be used only as a hint as to who the user is and never as proof of identity.\r\n   * This field is available only when the identity permission is requested in the manifest.\r\n   */\r\n  upn?: string;\r\n\r\n  /**\r\n   * The Azure AD tenant ID of the current user.\r\n   * Because a malicious party can run your content in a browser, this value should\r\n   * be used only as a hint as to who the user is and never as proof of identity.\r\n   * This field is available only when the identity permission is requested in the manifest.\r\n   */\r\n  tid?: string;\r\n\r\n  /**\r\n   * The current UI theme.\r\n   */\r\n  theme?: string;\r\n\r\n  /**\r\n   * Indication whether the tab is in full-screen mode.\r\n   */\r\n  isFullScreen?: boolean;\r\n\r\n  /**\r\n   * The type of the team.\r\n   */\r\n  teamType?: TeamType;\r\n\r\n  /**\r\n   * The root SharePoint site associated with the team.\r\n   */\r\n  teamSiteUrl?: string;\r\n\r\n  /**\r\n   * The domain of the root SharePoint site associated with the team.\r\n   */\r\n  teamSiteDomain?: string;\r\n\r\n  /**\r\n   * The relative path to the SharePoint site associated with the team.\r\n   */\r\n  teamSitePath?: string;\r\n\r\n  /**\r\n   * The relative path to the SharePoint folder associated with the channel.\r\n   */\r\n  channelRelativeUrl?: string;\r\n\r\n  /**\r\n   * Unique ID for the current Teams session for use in correlating telemetry data.\r\n   */\r\n  sessionId?: string;\r\n\r\n  /**\r\n   * The user's role in the team.\r\n   * Because a malicious party can run your content in a browser, this value should\r\n   * be used only as a hint as to the user's role, and never as proof of her role.\r\n   */\r\n  userTeamRole?: UserTeamRole;\r\n\r\n  /**\r\n   * The Microsoft Teams ID for the chat with which the content is associated.\r\n   */\r\n  chatId?: string;\r\n\r\n  /**\r\n   * A value suitable for use as a login_hint when authenticating with Azure AD.\r\n   * Because a malicious party can run your content in a browser, this value should\r\n   * be used only as a hint as to who the user is and never as proof of identity.\r\n   * This field is available only when the identity permission is requested in the manifest.\r\n   */\r\n  loginHint?: string;\r\n\r\n  /**\r\n   * The UPN of the current user. This may be an externally-authenticated UPN (e.g., guest users).\r\n   * Because a malicious party run your content in a browser, this value should\r\n   * be used only as a hint as to who the user is and never as proof of identity.\r\n   * This field is available only when the identity permission is requested in the manifest.\r\n   */\r\n  userPrincipalName?: string;\r\n\r\n  /**\r\n   * The Azure AD object id of the current user.\r\n   * Because a malicious party run your content in a browser, this value should\r\n   * be used only as a hint as to who the user is and never as proof of identity.\r\n   * This field is available only when the identity permission is requested in the manifest.\r\n   */\r\n  userObjectId?: string;\r\n\r\n  /**\r\n   * Indicates whether team is archived.\r\n   * Apps should use this as a signal to prevent any changes to content associated with archived teams.\r\n   */\r\n  isTeamArchived?: boolean;\r\n\r\n  /**\r\n   * The type of the host client. Possible values are : android, ios, web, desktop, rigel\r\n   */\r\n  hostClientType?: HostClientType;\r\n\r\n  /**\r\n   * The context where tab url is loaded (content, task, setting, remove, sidePanel)\r\n   */\r\n  frameContext?: FrameContexts;\r\n\r\n  /**\r\n   * SharePoint context. This is only available when hosted in SharePoint.\r\n   */\r\n  sharepoint?: any;\r\n\r\n  /**\r\n   * The type of license for the current users tenant.\r\n   */\r\n  tenantSKU?: string;\r\n\r\n  /**\r\n   * The license type for the current user.\r\n   */\r\n  userLicenseType?: string;\r\n\r\n  /**\r\n   * The ID of the parent message from which this task module was launched.\r\n   * This is only available in task modules launched from bot cards.\r\n   */\r\n  parentMessageId?: string;\r\n\r\n  /**\r\n   * Current ring ID\r\n   */\r\n  ringId?: string;\r\n\r\n  /**\r\n   * Unique ID for the current session for use in correlating telemetry data.\r\n   */\r\n  appSessionId?: string;\r\n\r\n  /**\r\n   * Represents whether calling is allowed for the current logged in User\r\n   */\r\n  isCallingAllowed?: boolean;\r\n\r\n  /**\r\n   * Represents whether PSTN calling is allowed for the current logged in User\r\n   */\r\n  isPSTNCallingAllowed?: boolean;\r\n\r\n  /**\r\n   * Meeting Id used by tab when running in meeting context\r\n   */\r\n  meetingId?: string;\r\n\r\n  /**\r\n   * The OneNote section ID that is linked to the channel.\r\n   */\r\n  defaultOneNoteSectionId?: string;\r\n\r\n  /**\r\n   * Indication whether the tab is in a pop out window\r\n   */\r\n  isMultiWindow?: boolean;\r\n\r\n  /**\r\n   * Personal app icon y coordinate position\r\n   */\r\n  appIconPosition?: number;\r\n\r\n  /**\r\n   * Source origin from where the tab is opened\r\n   */\r\n  sourceOrigin?: string;\r\n\r\n  /**\r\n   * Time when the user clicked on the tab\r\n   */\r\n  userClickTime?: number;\r\n}\r\n\r\nexport interface DeepLinkParameters {\r\n  /**\r\n   * The developer-defined unique ID for the sub-entity to which this deep link points in the current entity.\r\n   * This field should be used to restore to a specific state within an entity, such as scrolling to or activating a specific piece of content.\r\n   */\r\n  subEntityId: string;\r\n\r\n  /**\r\n   * The label for the sub-entity that should be displayed when the deep link is rendered in a client.\r\n   */\r\n  subEntityLabel: string;\r\n\r\n  /**\r\n   * The fallback URL to which to navigate the user if the client cannot render the page.\r\n   * This URL should lead directly to the sub-entity.\r\n   */\r\n  subEntityWebUrl?: string;\r\n}\r\n\r\nexport interface TaskInfo {\r\n  /**\r\n   * The url to be rendered in the webview/iframe.\r\n   */\r\n  url?: string;\r\n\r\n  /**\r\n   * JSON defining an adaptive card.\r\n   */\r\n  card?: string;\r\n\r\n  /**\r\n   * The requested height of the webview/iframe.\r\n   */\r\n  height?: TaskModuleDimension | number;\r\n\r\n  /**\r\n   * The requested width of the webview/iframe.\r\n   */\r\n  width?: TaskModuleDimension | number;\r\n\r\n  /**\r\n   * Title of the task module.\r\n   */\r\n  title?: string;\r\n\r\n  /**\r\n   * If client doesnt support the URL, the URL that needs to be opened in the browser.\r\n   */\r\n  fallbackUrl?: string;\r\n\r\n  /**\r\n   * Specifies a bot ID to send the result of the user's interaction with the task module.\r\n   * If specified, the bot will receive a task/complete invoke event with a JSON object\r\n   * in the event payload.\r\n   */\r\n  completionBotId?: string;\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs.\r\n * ------\r\n */\r\nexport interface OpenConversationRequest {\r\n  /**\r\n   * The Id of the subEntity where the conversation is taking place\r\n   */\r\n  subEntityId: string;\r\n\r\n  /**\r\n   * The title of the conversation\r\n   */\r\n  title: string;\r\n\r\n  /**\r\n   * The Id of the conversation. This is optional and should be specified whenever a previous conversation about a specific sub-entity has already been started before\r\n   */\r\n  conversationId?: string;\r\n\r\n  /**\r\n   * The Id of the channel. This is optional and should be specified whenever a conversation is started or opened in a personal app scope\r\n   */\r\n  channelId?: string;\r\n\r\n  /**\r\n   * The entity Id of the tab\r\n   */\r\n  entityId: string;\r\n\r\n  /**\r\n   * A function that is called once the conversation Id has been created\r\n   */\r\n  onStartConversation?: (conversationResponse: ConversationResponse) => void;\r\n\r\n  /**\r\n   * A function that is called if the pane is closed\r\n   */\r\n  onCloseConversation?: (conversationResponse: ConversationResponse) => void;\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs.\r\n * ------\r\n */\r\nexport interface ConversationResponse {\r\n  /**\r\n   * The Id of the subEntity where the conversation is taking place\r\n   */\r\n  subEntityId: string;\r\n\r\n  /**\r\n   * The Id of the conversation. This is optional and should be specified whenever a previous conversation about a specific sub-entity has already been started before\r\n   */\r\n  conversationId?: string;\r\n\r\n  /**\r\n   * The Id of the channel. This is optional and should be specified whenever a conversation is started or opened in a personal app scope\r\n   */\r\n  channelId?: string;\r\n\r\n  /**\r\n   * The entity Id of the tab\r\n   */\r\n  entityId?: string;\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs.\r\n */\r\nexport interface LoadContext {\r\n  /**\r\n   * The enitity that is requested to be loaded\r\n   */\r\n  entityId: string;\r\n\r\n  /**\r\n   * The content URL that is requested to be loaded\r\n   */\r\n  contentUrl: string;\r\n}\r\n\r\nexport interface FrameContext {\r\n  /**\r\n   * The current URL that needs to be used in the iframe if the tab is reloaded\r\n   */\r\n  contentUrl: string;\r\n\r\n  /**\r\n   * The current URL that needs to be used for opening the website when the user clicks on 'Go to website'\r\n   */\r\n  websiteUrl: string;\r\n}\r\n\r\nexport interface SdkError {\r\n  /**\r\n  error code\r\n  */\r\n  errorCode: ErrorCode;\r\n  /**\r\n  Optional description for the error. This may contain useful information for web-app developers.\r\n  This string will not be localized and is not for end-user consumption. \r\n  App should not depend on the string content. The exact value may change. This is only for debugging purposes.\r\n  */\r\n  message?: string;\r\n}\r\n\r\nexport enum ErrorCode {\r\n  /**\r\n   * API not supported in the current platform.\r\n   */\r\n  NOT_SUPPORTED_ON_PLATFORM = 100,\r\n  /**\r\n   * Internal error encountered while performing the required operation.\r\n   */\r\n  INTERNAL_ERROR = 500,\r\n  /**\r\n  Permissions denied by user\r\n  */\r\n  PERMISSION_DENIED = 1000,\r\n  /**\r\n   * Network issue\r\n   */\r\n  NETWORK_ERROR = 2000,\r\n  /**\r\n   * Underlying hardware doesn't support the capability\r\n   */\r\n  NO_HW_SUPPORT = 3000,\r\n  /**\r\n   * One or more arguments are invalid\r\n   */\r\n  INVALID_ARGUMENTS = 4000,\r\n  /**\r\n   * User is not authorized for this operation\r\n   */\r\n  UNAUTHORIZED_USER_OPERATION = 5000,\r\n  /**\r\n   * Could not complete the operation due to insufficient resources\r\n   */\r\n  INSUFFICIENT_RESOURCES = 6000,\r\n  /**\r\n   * Platform throttled the request because of API was invoked too frequently\r\n   */\r\n  THROTTLE = 7000,\r\n  /**\r\n   * User aborted the operation\r\n   */\r\n  USER_ABORT = 8000,\r\n  /**\r\n   * Could not complete the operation in the given time interval\r\n   */\r\n  OPERATION_TIMED_OUT = 8001,\r\n  /**\r\n   * Platform code is old and doesn't implement this API\r\n   */\r\n  OLD_PLATFORM = 9000,\r\n  /**\r\n   * The file specified was not found on the given location\r\n   */\r\n  FILE_NOT_FOUND = 404,\r\n  /**\r\n   * The return value is too big and has exceeded our size boundries\r\n   */\r\n  SIZE_EXCEEDED = 10000,\r\n}\r\n","import { ensureInitialized, sendMessageRequestToParent } from '../internal/internalAPIs';\r\nimport { GlobalVars } from '../internal/globalVars';\r\nimport { getGenericOnCompleteHandler } from '../internal/utils';\r\nimport { TabInstance } from './interfaces';\r\nimport { FrameContexts } from './constants';\r\n\r\n/**\r\n * Navigation specific part of the SDK.\r\n */\r\n\r\n/**\r\n * Return focus to the main Teams app. Will focus search bar if navigating foward and app bar if navigating back.\r\n * @param navigateForward Determines the direction to focus in teams app.\r\n */\r\nexport function returnFocus(navigateForward?: boolean): void {\r\n  ensureInitialized(FrameContexts.content);\r\n\r\n  sendMessageRequestToParent('returnFocus', [navigateForward]);\r\n}\r\n\r\n/**\r\n * Navigates the Microsoft Teams app to the specified tab instance.\r\n * @param tabInstance The tab instance to navigate to.\r\n */\r\nexport function navigateToTab(tabInstance: TabInstance, onComplete?: (status: boolean, reason?: string) => void): void {\r\n  ensureInitialized();\r\n\r\n  const messageId = sendMessageRequestToParent('navigateToTab', [tabInstance]);\r\n\r\n  const errorMessage = 'Invalid internalTabInstanceId and/or channelId were/was provided';\r\n  GlobalVars.callbacks[messageId] = onComplete ? onComplete : getGenericOnCompleteHandler(errorMessage);\r\n}\r\n\r\n/**\r\n * Navigates the frame to a new cross-domain URL. The domain of this URL must match at least one of the\r\n * valid domains specified in the validDomains block of the manifest; otherwise, an exception will be\r\n * thrown. This function needs to be used only when navigating the frame to a URL in a different domain\r\n * than the current one in a way that keeps the app informed of the change and allows the SDK to\r\n * continue working.\r\n * @param url The URL to navigate the frame to.\r\n */\r\nexport function navigateCrossDomain(url: string, onComplete?: (status: boolean, reason?: string) => void): void {\r\n  ensureInitialized(\r\n    FrameContexts.content,\r\n    FrameContexts.sidePanel,\r\n    FrameContexts.settings,\r\n    FrameContexts.remove,\r\n    FrameContexts.task,\r\n    FrameContexts.stage,\r\n  );\r\n\r\n  const messageId = sendMessageRequestToParent('navigateCrossDomain', [url]);\r\n  const errorMessage =\r\n    'Cross-origin navigation is only supported for URLs matching the pattern registered in the manifest.';\r\n  GlobalVars.callbacks[messageId] = onComplete ? onComplete : getGenericOnCompleteHandler(errorMessage);\r\n}\r\n\r\n/**\r\n * Navigates back in the Teams client. See registerBackButtonHandler for more information on when\r\n * it's appropriate to use this method.\r\n */\r\nexport function navigateBack(onComplete?: (status: boolean, reason?: string) => void): void {\r\n  ensureInitialized();\r\n\r\n  const messageId = sendMessageRequestToParent('navigateBack', []);\r\n  const errorMessage = 'Back navigation is not supported in the current client or context.';\r\n  GlobalVars.callbacks[messageId] = onComplete ? onComplete : getGenericOnCompleteHandler(errorMessage);\r\n}\r\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","import { ensureInitialized, sendMessageRequestToParent } from '../internal/internalAPIs';\r\nimport { GlobalVars } from '../internal/globalVars';\r\n\r\n/**\r\n * Namespace to interact with the logging part of the SDK.\r\n * This object is used to send the app logs on demand to the host client\r\n *\r\n * @private\r\n * Hide from docs\r\n */\r\nexport namespace logs {\r\n  GlobalVars.handlers['log.request'] = handleGetLogRequest;\r\n\r\n  function handleGetLogRequest(): void {\r\n    if (GlobalVars.getLogHandler) {\r\n      const log: string = GlobalVars.getLogHandler();\r\n      sendMessageRequestToParent('log.receive', [log]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs\r\n   * ------\r\n   * Registers a handler for getting app log\r\n   * @param handler The handler to invoke to get the app log\r\n   */\r\n  export function registerGetLogHandler(handler: () => string): void {\r\n    ensureInitialized();\r\n\r\n    GlobalVars.getLogHandler = handler;\r\n    handler && sendMessageRequestToParent('registerHandler', ['log.request']);\r\n  }\r\n}\r\n","import { ensureInitialized, sendMessageRequestToParent } from '../internal/internalAPIs';\r\nimport { GlobalVars } from '../internal/globalVars';\r\nimport { FrameContexts } from './constants';\r\nimport { getGenericOnCompleteHandler } from '../internal/utils';\r\n\r\n/**\r\n * Namespace to interact with the settings-specific part of the SDK.\r\n * This object is usable only on the settings frame.\r\n */\r\nexport namespace settings {\r\n  let saveHandler: (evt: SaveEvent) => void;\r\n  let removeHandler: (evt: RemoveEvent) => void;\r\n  GlobalVars.handlers['settings.save'] = handleSave;\r\n  GlobalVars.handlers['settings.remove'] = handleRemove;\r\n\r\n  /**\r\n   * Sets the validity state for the settings.\r\n   * The initial value is false, so the user cannot save the settings until this is called with true.\r\n   * @param validityState Indicates whether the save or remove button is enabled for the user.\r\n   */\r\n  export function setValidityState(validityState: boolean): void {\r\n    ensureInitialized(FrameContexts.settings, FrameContexts.remove);\r\n    sendMessageRequestToParent('settings.setValidityState', [validityState]);\r\n  }\r\n\r\n  /**\r\n   * Gets the settings for the current instance.\r\n   * @param callback The callback to invoke when the {@link Settings} object is retrieved.\r\n   */\r\n  export function getSettings(callback: (instanceSettings: Settings) => void): void {\r\n    ensureInitialized(FrameContexts.content, FrameContexts.settings, FrameContexts.remove);\r\n    const messageId = sendMessageRequestToParent('settings.getSettings');\r\n    GlobalVars.callbacks[messageId] = callback;\r\n  }\r\n\r\n  /**\r\n   * Sets the settings for the current instance.\r\n   * This is an asynchronous operation; calls to getSettings are not guaranteed to reflect the changed state.\r\n   * @param settings The desired settings for this instance.\r\n   */\r\n  export function setSettings(\r\n    instanceSettings: Settings,\r\n    onComplete?: (status: boolean, reason?: string) => void,\r\n  ): void {\r\n    ensureInitialized(FrameContexts.content, FrameContexts.settings);\r\n    const messageId = sendMessageRequestToParent('settings.setSettings', [instanceSettings]);\r\n    GlobalVars.callbacks[messageId] = onComplete ? onComplete : getGenericOnCompleteHandler();\r\n  }\r\n\r\n  /**\r\n   * Registers a handler for when the user attempts to save the settings. This handler should be used\r\n   * to create or update the underlying resource powering the content.\r\n   * The object passed to the handler must be used to notify whether to proceed with the save.\r\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\r\n   * @param handler The handler to invoke when the user selects the save button.\r\n   */\r\n  export function registerOnSaveHandler(handler: (evt: SaveEvent) => void): void {\r\n    ensureInitialized(FrameContexts.settings);\r\n    saveHandler = handler;\r\n    handler && sendMessageRequestToParent('registerHandler', ['save']);\r\n  }\r\n\r\n  /**\r\n   * Registers a handler for user attempts to remove content. This handler should be used\r\n   * to remove the underlying resource powering the content.\r\n   * The object passed to the handler must be used to indicate whether to proceed with the removal.\r\n   * Only one handler may be registered at a time. Subsequent registrations will override the first.\r\n   * @param handler The handler to invoke when the user selects the remove button.\r\n   */\r\n  export function registerOnRemoveHandler(handler: (evt: RemoveEvent) => void): void {\r\n    ensureInitialized(FrameContexts.remove, FrameContexts.settings);\r\n    removeHandler = handler;\r\n    handler && sendMessageRequestToParent('registerHandler', ['remove']);\r\n  }\r\n\r\n  function handleSave(result?: SaveParameters): void {\r\n    const saveEvent = new SaveEventImpl(result);\r\n    if (saveHandler) {\r\n      saveHandler(saveEvent);\r\n    } else {\r\n      // If no handler is registered, we assume success.\r\n      saveEvent.notifySuccess();\r\n    }\r\n  }\r\n\r\n  export interface Settings {\r\n    /**\r\n     * A suggested display name for the new content.\r\n     * In the settings for an existing instance being updated, this call has no effect.\r\n     */\r\n    suggestedDisplayName?: string;\r\n    /**\r\n     * Sets the URL to use for the content of this instance.\r\n     */\r\n    contentUrl: string;\r\n    /**\r\n     * Sets the URL for the removal configuration experience.\r\n     */\r\n    removeUrl?: string;\r\n    /**\r\n     * Sets the URL to use for the external link to view the underlying resource in a browser.\r\n     */\r\n    websiteUrl?: string;\r\n    /**\r\n     * The developer-defined unique ID for the entity to which this content points.\r\n     */\r\n    entityId: string;\r\n  }\r\n\r\n  export interface SaveEvent {\r\n    /**\r\n     * Object containing properties passed as arguments to the settings.save event.\r\n     */\r\n    result: SaveParameters;\r\n    /**\r\n     * Indicates that the underlying resource has been created and the settings can be saved.\r\n     */\r\n    notifySuccess(): void;\r\n    /**\r\n     * Indicates that creation of the underlying resource failed and that the settings cannot be saved.\r\n     * @param reason Specifies a reason for the failure. If provided, this string is displayed to the user; otherwise a generic error is displayed.\r\n     */\r\n    notifyFailure(reason?: string): void;\r\n  }\r\n\r\n  export interface RemoveEvent {\r\n    /**\r\n     * Indicates that the underlying resource has been removed and the content can be removed.\r\n     */\r\n    notifySuccess(): void;\r\n    /**\r\n     * Indicates that removal of the underlying resource failed and that the content cannot be removed.\r\n     * @param reason Specifies a reason for the failure. If provided, this string is displayed to the user; otherwise a generic error is displayed.\r\n     */\r\n    notifyFailure(reason?: string): void;\r\n  }\r\n\r\n  export interface SaveParameters {\r\n    /**\r\n     * Connector's webhook Url returned as arguments to settings.save event as part of user clicking on Save\r\n     */\r\n    webhookUrl?: string;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs, since this class is not directly used.\r\n   */\r\n  class SaveEventImpl implements SaveEvent {\r\n    public notified: boolean = false;\r\n    public result: SaveParameters;\r\n    public constructor(result?: SaveParameters) {\r\n      this.result = result ? result : {};\r\n    }\r\n    public notifySuccess(): void {\r\n      this.ensureNotNotified();\r\n      sendMessageRequestToParent('settings.save.success');\r\n      this.notified = true;\r\n    }\r\n    public notifyFailure(reason?: string): void {\r\n      this.ensureNotNotified();\r\n      sendMessageRequestToParent('settings.save.failure', [reason]);\r\n      this.notified = true;\r\n    }\r\n    private ensureNotNotified(): void {\r\n      if (this.notified) {\r\n        throw new Error('The SaveEvent may only notify success or failure once.');\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleRemove(): void {\r\n    const removeEvent = new RemoveEventImpl();\r\n    if (removeHandler) {\r\n      removeHandler(removeEvent);\r\n    } else {\r\n      // If no handler is registered, we assume success.\r\n      removeEvent.notifySuccess();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs, since this class is not directly used.\r\n   */\r\n  class RemoveEventImpl implements RemoveEvent {\r\n    public notified: boolean = false;\r\n\r\n    public notifySuccess(): void {\r\n      this.ensureNotNotified();\r\n      sendMessageRequestToParent('settings.remove.success');\r\n      this.notified = true;\r\n    }\r\n\r\n    public notifyFailure(reason?: string): void {\r\n      this.ensureNotNotified();\r\n      sendMessageRequestToParent('settings.remove.failure', [reason]);\r\n      this.notified = true;\r\n    }\r\n\r\n    private ensureNotNotified(): void {\r\n      if (this.notified) {\r\n        throw new Error('The removeEvent may only notify success or failure once.');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ensureInitialized, sendMessageRequestToParent } from '../internal/internalAPIs';\r\nimport { GlobalVars } from '../internal/globalVars';\r\nimport { FrameContexts } from './constants';\r\nimport { getGenericOnCompleteHandler } from '../internal/utils';\r\n\r\nexport interface IAppWindow {\r\n  postMessage(message): void;\r\n  addEventListener(type: string, listener: Function): void;\r\n}\r\n\r\nexport class ChildAppWindow implements IAppWindow {\r\n  public postMessage(message: any, onComplete?: (status: boolean, reason?: string) => void): void {\r\n    ensureInitialized();\r\n    const messageId = sendMessageRequestToParent('messageForChild', [message]);\r\n    GlobalVars.callbacks[messageId] = onComplete ? onComplete : getGenericOnCompleteHandler();\r\n  }\r\n\r\n  public addEventListener(type: string, listener: (message: any) => void): void {\r\n    if (type === 'message') {\r\n      GlobalVars.handlers['messageForParent'] = listener;\r\n    }\r\n  }\r\n}\r\n\r\nexport class ParentAppWindow implements IAppWindow {\r\n  private static _instance: ParentAppWindow;\r\n  public static get Instance(): IAppWindow {\r\n    // Do you need arguments? Make it a regular method instead.\r\n    return this._instance || (this._instance = new this());\r\n  }\r\n\r\n  public postMessage(message: any, onComplete?: (status: boolean, reason?: string) => void): void {\r\n    ensureInitialized(FrameContexts.task);\r\n    const messageId = sendMessageRequestToParent('messageForParent', [message]);\r\n\r\n    GlobalVars.callbacks[messageId] = onComplete ? onComplete : getGenericOnCompleteHandler();\r\n  }\r\n\r\n  public addEventListener(type: string, listener: (message: any) => void): void {\r\n    if (type === 'message') {\r\n      GlobalVars.handlers['messageForChild'] = listener;\r\n    }\r\n  }\r\n}\r\n","import { GlobalVars } from '../internal/globalVars';\r\nimport { SdkError, ErrorCode } from './interfaces';\r\nimport { ensureInitialized, sendMessageRequestToParent, isAPISupportedByPlatform } from '../internal/internalAPIs';\r\nimport { FrameContexts, HostClientType } from './constants';\r\nimport { generateGUID } from '../internal/utils';\r\nimport {\r\n  createFile,\r\n  decodeAttachment,\r\n  validateSelectMediaInputs,\r\n  validateGetMediaInputs,\r\n  validateViewImagesInput,\r\n  validateScanBarCodeInput,\r\n} from '../internal/mediaUtil';\r\n\r\nexport namespace media {\r\n  /**\r\n   * This is the SDK version when captureImage API is supported on mobile.\r\n   */\r\n  const captureImageMobileSupportVersion = '1.7.0';\r\n\r\n  /**\r\n   * This is the SDK version when media APIs is supported on all three platforms ios, android and web.\r\n   */\r\n  const mediaAPISupportVersion = '1.8.0';\r\n\r\n  /**\r\n   * This is the SDK version when getMedia API is supported via Callbacks on all three platforms ios, android and web.\r\n   */\r\n  const getMediaCallbackSupportVersion = '2.0.0';\r\n\r\n  /**\r\n   * This is the SDK version when scanBarCode API is supported on mobile.\r\n   */\r\n  const scanBarCodeAPIMobileSupportVersion = '1.9.0';\r\n\r\n  /**\r\n   * Enum for file formats supported\r\n   */\r\n  export enum FileFormat {\r\n    Base64 = 'base64',\r\n    ID = 'id',\r\n  }\r\n\r\n  /**\r\n   * File object that can be used to represent image or video or audio\r\n   */\r\n  export class File {\r\n    /**\r\n     * Content of the file. When format is Base64, this is the base64 content\r\n     * When format is ID, this is id mapping to the URI\r\n     * When format is base64 and app needs to use this directly in HTML tags, it should convert this to dataUrl.\r\n     */\r\n    public content: string;\r\n\r\n    /**\r\n     * Format of the content\r\n     */\r\n    public format: FileFormat;\r\n\r\n    /**\r\n     * Size of the file in KB\r\n     */\r\n    public size: number;\r\n\r\n    /**\r\n     * MIME type. This can be used for constructing a dataUrl, if needed.\r\n     */\r\n    public mimeType: string;\r\n\r\n    /**\r\n     * Optional: Name of the file\r\n     */\r\n    public name?: string;\r\n  }\r\n\r\n  /**\r\n   * Launch camera, capture image or choose image from gallery and return the images as a File[] object to the callback.\r\n   * Callback will be called with an error, if there are any. App should first check the error.\r\n   * If it is present the user can be updated with appropriate error message.\r\n   * If error is null or undefined, then files will have the required result.\r\n   * Note: Currently we support getting one File through this API, i.e. the file arrays size will be one.\r\n   * Note: For desktop, this API is not supported. Callback will be resolved with ErrorCode.NotSupported.\r\n   * @see File\r\n   * @see SdkError\r\n   */\r\n  export function captureImage(callback: (error: SdkError, files: File[]) => void): void {\r\n    if (!callback) {\r\n      throw new Error('[captureImage] Callback cannot be null');\r\n    }\r\n    ensureInitialized(FrameContexts.content, FrameContexts.task);\r\n\r\n    if (!GlobalVars.isFramelessWindow) {\r\n      const notSupportedError: SdkError = { errorCode: ErrorCode.NOT_SUPPORTED_ON_PLATFORM };\r\n      callback(notSupportedError, undefined);\r\n      return;\r\n    }\r\n\r\n    if (!isAPISupportedByPlatform(captureImageMobileSupportVersion)) {\r\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\r\n      callback(oldPlatformError, undefined);\r\n      return;\r\n    }\r\n\r\n    const messageId = sendMessageRequestToParent('captureImage');\r\n    GlobalVars.callbacks[messageId] = callback;\r\n  }\r\n\r\n  /**\r\n   * Media object returned by the select Media API\r\n   */\r\n  export class Media extends File {\r\n    constructor(that: Media = null) {\r\n      super();\r\n      if (that) {\r\n        this.content = that.content;\r\n        this.format = that.format;\r\n        this.mimeType = that.mimeType;\r\n        this.name = that.name;\r\n        this.preview = that.preview;\r\n        this.size = that.size;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * A preview of the file which is a lightweight representation.\r\n     * In case of images this will be a thumbnail/compressed image in base64 encoding.\r\n     */\r\n    public preview: string;\r\n\r\n    /**\r\n     * Gets the media in chunks irrespecitve of size, these chunks are assembled and sent back to the webapp as file/blob\r\n     * @param callback returns blob of media\r\n     */\r\n    public getMedia(callback: (error: SdkError, blob: Blob) => void): void {\r\n      if (!callback) {\r\n        throw new Error('[get Media] Callback cannot be null');\r\n      }\r\n      ensureInitialized(FrameContexts.content, FrameContexts.task);\r\n      if (!isAPISupportedByPlatform(mediaAPISupportVersion)) {\r\n        const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\r\n        callback(oldPlatformError, null);\r\n        return;\r\n      }\r\n      if (!validateGetMediaInputs(this.mimeType, this.format, this.content)) {\r\n        const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\r\n        callback(invalidInput, null);\r\n        return;\r\n      }\r\n      // Call the new get media implementation via callbacks if the client version is greater than or equal to '2.0.0'\r\n      if (isAPISupportedByPlatform(getMediaCallbackSupportVersion)) {\r\n        this.getMediaViaCallback(callback);\r\n      } else {\r\n        this.getMediaViaHandler(callback);\r\n      }\r\n    }\r\n\r\n    private getMediaViaCallback(callback: (error: SdkError, blob: Blob) => void): void {\r\n      const helper: MediaHelper = {\r\n        mediaMimeType: this.mimeType,\r\n        assembleAttachment: [],\r\n      };\r\n      const localUriId = [this.content];\r\n      const messageId = sendMessageRequestToParent('getMedia', localUriId);\r\n      function handleGetMediaCallbackRequest(mediaResult: MediaResult): void {\r\n        if (callback) {\r\n          if (mediaResult && mediaResult.error) {\r\n            callback(mediaResult.error, null);\r\n          } else {\r\n            if (mediaResult && mediaResult.mediaChunk) {\r\n              // If the chunksequence number is less than equal to 0 implies EOF\r\n              // create file/blob when all chunks have arrived and we get 0/-1 as chunksequence number\r\n              if (mediaResult.mediaChunk.chunkSequence <= 0) {\r\n                const file = createFile(helper.assembleAttachment, helper.mediaMimeType);\r\n                callback(mediaResult.error, file);\r\n              } else {\r\n                // Keep pushing chunks into assemble attachment\r\n                const assemble: AssembleAttachment = decodeAttachment(mediaResult.mediaChunk, helper.mediaMimeType);\r\n                helper.assembleAttachment.push(assemble);\r\n              }\r\n            } else {\r\n              callback({ errorCode: ErrorCode.INTERNAL_ERROR, message: 'data receieved is null' }, null);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      GlobalVars.callbacks[messageId] = handleGetMediaCallbackRequest;\r\n    }\r\n\r\n    private getMediaViaHandler(callback: (error: SdkError, blob: Blob) => void): void {\r\n      const actionName = generateGUID();\r\n      const helper: MediaHelper = {\r\n        mediaMimeType: this.mimeType,\r\n        assembleAttachment: [],\r\n      };\r\n      const params = [actionName, this.content];\r\n      this.content && callback && sendMessageRequestToParent('getMedia', params);\r\n      function handleGetMediaRequest(response: string): void {\r\n        if (callback) {\r\n          const mediaResult: MediaResult = JSON.parse(response);\r\n          if (mediaResult.error) {\r\n            callback(mediaResult.error, null);\r\n            delete GlobalVars.handlers['getMedia' + actionName];\r\n          } else {\r\n            if (mediaResult.mediaChunk) {\r\n              // If the chunksequence number is less than equal to 0 implies EOF\r\n              // create file/blob when all chunks have arrived and we get 0/-1 as chunksequence number\r\n              if (mediaResult.mediaChunk.chunkSequence <= 0) {\r\n                const file = createFile(helper.assembleAttachment, helper.mediaMimeType);\r\n                callback(mediaResult.error, file);\r\n                delete GlobalVars.handlers['getMedia' + actionName];\r\n              } else {\r\n                // Keep pushing chunks into assemble attachment\r\n                const assemble: AssembleAttachment = decodeAttachment(mediaResult.mediaChunk, helper.mediaMimeType);\r\n                helper.assembleAttachment.push(assemble);\r\n              }\r\n            } else {\r\n              callback({ errorCode: ErrorCode.INTERNAL_ERROR, message: 'data receieved is null' }, null);\r\n              delete GlobalVars.handlers['getMedia' + actionName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      GlobalVars.handlers['getMedia' + actionName] = handleGetMediaRequest;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Input parameter supplied to the select Media API\r\n   */\r\n  export interface MediaInputs {\r\n    /**\r\n     * Only one media type can be selected at a time\r\n     */\r\n    mediaType: MediaType;\r\n\r\n    /**\r\n     * max limit of media allowed to be selected in one go, current max limit is 10 set by office lens.\r\n     */\r\n    maxMediaCount: number;\r\n\r\n    /**\r\n     * Additional properties for customization of select media in mobile devices\r\n     */\r\n    imageProps?: ImageProps;\r\n\r\n    /**\r\n     * Additional properties for audio capture flows.\r\n     */\r\n    audioProps?: AudioProps;\r\n  }\r\n\r\n  /**\r\n   *  All properties in ImageProps are optional and have default values in the platform\r\n   */\r\n  export interface ImageProps {\r\n    /**\r\n     * Optional; Lets the developer specify the image source, more than one can be specified.\r\n     * Default value is both camera and gallery\r\n     */\r\n    sources?: Source[];\r\n\r\n    /**\r\n     * Optional; Specify in which mode the camera will be opened.\r\n     * Default value is Photo\r\n     */\r\n    startMode?: CameraStartMode;\r\n\r\n    /**\r\n     * Optional; indicate if inking on the selected Image is allowed or not\r\n     * Default value is true\r\n     */\r\n    ink?: boolean;\r\n\r\n    /**\r\n     * Optional; indicate if user is allowed to move between front and back camera\r\n     * Default value is true\r\n     */\r\n    cameraSwitcher?: boolean;\r\n\r\n    /**\r\n     * Optional; indicate if putting text stickers on the selected Image is allowed or not\r\n     * Default value is true\r\n     */\r\n    textSticker?: boolean;\r\n\r\n    /**\r\n     * Optional; indicate if image filtering mode is enabled on the selected image\r\n     * Default value is false\r\n     */\r\n    enableFilter?: boolean;\r\n  }\r\n\r\n  /**\r\n   *  All properties in AudioProps are optional and have default values in the platform\r\n   */\r\n  export interface AudioProps {\r\n    /**\r\n     * Optional; the maximum duration in minutes after which the recording should terminate automatically.\r\n     * Default value is defined by the platform serving the API.\r\n     */\r\n    maxDuration?: number;\r\n  }\r\n\r\n  /**\r\n   * The modes in which camera can be launched in select Media API\r\n   */\r\n  export enum CameraStartMode {\r\n    Photo = 1,\r\n    Document = 2,\r\n    Whiteboard = 3,\r\n    BusinessCard = 4,\r\n  }\r\n\r\n  /**\r\n   * Specifies the image source\r\n   */\r\n  export enum Source {\r\n    Camera = 1,\r\n    Gallery = 2,\r\n  }\r\n\r\n  /**\r\n   * Specifies the type of Media\r\n   */\r\n  export enum MediaType {\r\n    Image = 1,\r\n    // Video = 2, // Not implemented yet\r\n    // ImageOrVideo = 3, // Not implemented yet\r\n    Audio = 4,\r\n  }\r\n\r\n  /**\r\n   * Input for view images API\r\n   */\r\n  export interface ImageUri {\r\n    value: string;\r\n    type: ImageUriType;\r\n  }\r\n\r\n  /**\r\n   * ID contains a mapping for content uri on platform's side, URL is generic\r\n   */\r\n  export enum ImageUriType {\r\n    ID = 1,\r\n    URL = 2,\r\n  }\r\n\r\n  /**\r\n   * Media chunks an output of getMedia API from platform\r\n   */\r\n  export interface MediaChunk {\r\n    /**\r\n     * Base 64 data for the requested uri\r\n     */\r\n    chunk: string;\r\n\r\n    /**\r\n     * chunk sequence number​\r\n     */\r\n    chunkSequence: number;\r\n  }\r\n\r\n  /**\r\n   * Output of getMedia API from platform\r\n   */\r\n  interface MediaResult {\r\n    /**\r\n     * error encountered in getMedia API\r\n     */\r\n    error: SdkError;\r\n\r\n    /**\r\n     * Media chunk which will be assemebled and converted into a blob\r\n     */\r\n    mediaChunk: MediaChunk;\r\n  }\r\n\r\n  /**\r\n   * Helper object to assembled media chunks\r\n   */\r\n  export interface AssembleAttachment {\r\n    sequence: number;\r\n    file: Blob;\r\n  }\r\n\r\n  /**\r\n   * Helper class for assembling media\r\n   */\r\n  interface MediaHelper {\r\n    mediaMimeType: string;\r\n    assembleAttachment: AssembleAttachment[];\r\n  }\r\n\r\n  /**\r\n   * Select an attachment using camera/gallery\r\n   * @param mediaInputs The input params to customize the media to be selected\r\n   * @param callback The callback to invoke after fetching the media\r\n   */\r\n  export function selectMedia(\r\n    mediaInputs: MediaInputs,\r\n    callback: (error: SdkError, attachments: Media[]) => void,\r\n  ): void {\r\n    if (!callback) {\r\n      throw new Error('[select Media] Callback cannot be null');\r\n    }\r\n    ensureInitialized(FrameContexts.content, FrameContexts.task);\r\n    if (!isAPISupportedByPlatform(mediaAPISupportVersion)) {\r\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\r\n      callback(oldPlatformError, null);\r\n      return;\r\n    }\r\n    if (!validateSelectMediaInputs(mediaInputs)) {\r\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\r\n      callback(invalidInput, null);\r\n      return;\r\n    }\r\n\r\n    const params = [mediaInputs];\r\n    const messageId = sendMessageRequestToParent('selectMedia', params);\r\n\r\n    // What comes back from native at attachments would just be objects and will be missing getMedia method on them.\r\n    GlobalVars.callbacks[messageId] = (err: SdkError, localAttachments: Media[]) => {\r\n      if (!localAttachments) {\r\n        callback(err, null);\r\n        return;\r\n      }\r\n      let mediaArray: Media[] = [];\r\n      for (let attachment of localAttachments) {\r\n        mediaArray.push(new Media(attachment));\r\n      }\r\n      callback(err, mediaArray);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * View images using native image viewer\r\n   * @param uriList urilist of images to be viewed - can be content uri or server url. supports upto 10 Images in one go\r\n   * @param callback returns back error if encountered, returns null in case of success\r\n   */\r\n  export function viewImages(uriList: ImageUri[], callback: (error?: SdkError) => void): void {\r\n    if (!callback) {\r\n      throw new Error('[view images] Callback cannot be null');\r\n    }\r\n    ensureInitialized(FrameContexts.content, FrameContexts.task);\r\n\r\n    if (!isAPISupportedByPlatform(mediaAPISupportVersion)) {\r\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\r\n      callback(oldPlatformError);\r\n      return;\r\n    }\r\n    if (!validateViewImagesInput(uriList)) {\r\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\r\n      callback(invalidInput);\r\n      return;\r\n    }\r\n\r\n    const params = [uriList];\r\n    const messageId = sendMessageRequestToParent('viewImages', params);\r\n    GlobalVars.callbacks[messageId] = callback;\r\n  }\r\n\r\n  /**\r\n   * Barcode configuration supplied to scanBarCode API to customize barcode scanning experience in mobile\r\n   * All properties in BarCodeConfig are optional and have default values in the platform\r\n   */\r\n  export interface BarCodeConfig {\r\n    /**\r\n     * Optional; Lets the developer specify the scan timeout interval in seconds\r\n     * Default value is 30 seconds and max allowed value is 60 seconds\r\n     */\r\n    timeOutIntervalInSec?: number;\r\n  }\r\n\r\n  /**\r\n   * Scan Barcode/QRcode using camera\r\n   * Note: For desktop and web, this API is not supported. Callback will be resolved with ErrorCode.NotSupported.\r\n   * @param callback callback to invoke after scanning the barcode\r\n   * @param config optional input configuration to customize the barcode scanning experience\r\n   */\r\n  export function scanBarCode(callback: (error: SdkError, decodedText: string) => void, config?: BarCodeConfig): void {\r\n    if (!callback) {\r\n      throw new Error('[media.scanBarCode] Callback cannot be null');\r\n    }\r\n    ensureInitialized(FrameContexts.content, FrameContexts.task);\r\n\r\n    if (\r\n      GlobalVars.hostClientType === HostClientType.desktop ||\r\n      GlobalVars.hostClientType === HostClientType.web ||\r\n      GlobalVars.hostClientType === HostClientType.rigel\r\n    ) {\r\n      const notSupportedError: SdkError = { errorCode: ErrorCode.NOT_SUPPORTED_ON_PLATFORM };\r\n      callback(notSupportedError, null);\r\n      return;\r\n    }\r\n\r\n    if (!isAPISupportedByPlatform(scanBarCodeAPIMobileSupportVersion)) {\r\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\r\n      callback(oldPlatformError, null);\r\n      return;\r\n    }\r\n\r\n    if (!validateScanBarCodeInput(config)) {\r\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\r\n      callback(invalidInput, null);\r\n      return;\r\n    }\r\n\r\n    const messageId = sendMessageRequestToParent('media.scanBarCode', [config]);\r\n    GlobalVars.callbacks[messageId] = callback;\r\n  }\r\n}\r\n","export * from './private/index';\r\nexport * from './public/index';\r\n","export { bot } from './bot';\r\nexport { menus } from './menus';\r\nexport { logs } from './logs';\r\nexport {\r\n  ChatMembersInformation,\r\n  FilePreviewParameters,\r\n  NotificationTypes,\r\n  ShowNotificationParameters,\r\n  TeamInstanceParameters,\r\n  ThreadMember,\r\n  UserJoinedTeamsInformation,\r\n  ViewerActionTypes,\r\n} from './interfaces';\r\nexport {\r\n  enterFullscreen,\r\n  exitFullscreen,\r\n  getChatMembers,\r\n  getConfigSetting,\r\n  getUserJoinedTeams,\r\n  openFilePreview,\r\n  sendCustomMessage,\r\n  showNotification,\r\n  sendCustomEvent,\r\n  registerCustomHandler,\r\n  uploadCustomApp,\r\n} from './privateAPIs';\r\nexport { conversations } from './conversations';\r\nexport { meetingRoom } from './meetingRoom';\r\n","import { GlobalVars } from '../internal/globalVars';\r\nimport { ensureInitialized, sendMessageRequestToParent } from '../internal/internalAPIs';\r\n\r\n/**\r\n * @private\r\n * Namespace to interact with bots using the SDK.\r\n */\r\nexport namespace bot {\r\n  /**\r\n   * @private\r\n   * Hide from docs until release.\r\n   * ------\r\n   * Sends query to bot in order to retrieve data.\r\n   * @param botRequest query to send to bot.\r\n   * @param onSuccess callback to invoke when data is retrieved from bot\r\n   * @param onError callback to invoke should an error occur\r\n   */\r\n  export function sendQuery(\r\n    botRequest: QueryRequest,\r\n    onSuccess?: (data: QueryResponse) => void,\r\n    onError?: (error: string) => void,\r\n  ): void {\r\n    ensureInitialized();\r\n\r\n    const messageId = sendMessageRequestToParent('bot.executeQuery', [botRequest]);\r\n\r\n    GlobalVars.callbacks[messageId] = (success: boolean, response: string | QueryResponse) => {\r\n      if (success) {\r\n        onSuccess(response as QueryResponse);\r\n      } else {\r\n        onError(response as string);\r\n      }\r\n    };\r\n  }\r\n  /**\r\n   * @private\r\n   * Hide from docs until release.\r\n   * -----\r\n   * Retrieves list of support commands from bot\r\n   * @param onSuccess callback to invoke when data is retrieved from bot\r\n   * @param onError callback to invoke should an error occur\r\n   */\r\n  export function getSupportedCommands(\r\n    onSuccess?: (response: Command[]) => void,\r\n    onError?: (error: string) => void,\r\n  ): void {\r\n    ensureInitialized();\r\n\r\n    const messageId = sendMessageRequestToParent('bot.getSupportedCommands');\r\n\r\n    GlobalVars.callbacks[messageId] = (success: boolean, response: string | Command[]) => {\r\n      if (success) {\r\n        onSuccess(response as Command[]);\r\n      } else {\r\n        onError(response as string);\r\n      }\r\n    };\r\n  }\r\n  /**\r\n   * @private\r\n   * Hide from docs until release.\r\n   * -----\r\n   * Authenticates a user for json tab\r\n   * @param authRequest callback to invoke when data is retrieved from bot\r\n   * @param onSuccess callback to invoke when user is authenticated\r\n   * @param onError callback to invoke should an error occur\r\n   */\r\n  export function authenticate(\r\n    authRequest: AuthQueryRequest,\r\n    onSuccess?: (results: Results) => void,\r\n    onError?: (error: string) => void,\r\n  ): void {\r\n    ensureInitialized();\r\n\r\n    const messageId = sendMessageRequestToParent('bot.authenticate', [authRequest]);\r\n\r\n    GlobalVars.callbacks[messageId] = (success: boolean, response: string | Results) => {\r\n      if (success) {\r\n        onSuccess(response as Results);\r\n      } else {\r\n        onError(response as string);\r\n      }\r\n    };\r\n  }\r\n\r\n  export interface QueryRequest {\r\n    /**\r\n     * Query to search for\r\n     */\r\n    query: string;\r\n    commandId?: string;\r\n    option?: {\r\n      skip: number;\r\n      count: number;\r\n    };\r\n  }\r\n\r\n  export interface QueryResponse {\r\n    data: Results | Auth;\r\n    type: ResponseType;\r\n  }\r\n\r\n  export interface Results {\r\n    attachments: Attachment[];\r\n    layout: any;\r\n    botId: string;\r\n  }\r\n\r\n  export interface Auth {\r\n    url: string;\r\n    title: string;\r\n  }\r\n\r\n  export interface AuthQueryRequest extends QueryRequest {\r\n    url: string;\r\n  }\r\n\r\n  export interface Attachment {\r\n    card: any;\r\n    previewCard: any;\r\n    previewRawPayload: any;\r\n    rawPayload: any;\r\n  }\r\n\r\n  export interface Command {\r\n    title: string;\r\n    id: string;\r\n    initialRun: boolean;\r\n  }\r\n\r\n  export enum ResponseType {\r\n    Results = 'Results',\r\n    Auth = 'Auth',\r\n  }\r\n}\r\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import { ensureInitialized, sendMessageRequestToParent } from '../internal/internalAPIs';\r\nimport { GlobalVars } from '../internal/globalVars';\r\n/**\r\n * Namespace to interact with the menu-specific part of the SDK.\r\n * This object is used to show View Configuration, Action Menu and Navigation Bar Menu.\r\n *\r\n * @private\r\n * Hide from docs until feature is complete\r\n */\r\nexport namespace menus {\r\n  /**\r\n   * Represents information about item in View Configuration.\r\n   */\r\n  export interface ViewConfiguration {\r\n    /**\r\n     * Unique identifier of view.\r\n     */\r\n    id: string;\r\n    /**\r\n     * Display title of the view.\r\n     */\r\n    title: string;\r\n    /**\r\n     * Additional information for accessibility.\r\n     */\r\n    contentDescription?: string;\r\n  }\r\n  /**\r\n   * Represents information about menu item for Action Menu and Navigation Bar Menu.\r\n   */\r\n  export class MenuItem {\r\n    /**\r\n     * Unique identifier for the menu item.\r\n     */\r\n    public id: string;\r\n    /**\r\n     * Display title of the menu item.\r\n     */\r\n    public title: string;\r\n    /**\r\n     * Display icon of the menu item. The icon value must be a string having SVG icon content.\r\n     */\r\n    public icon: string;\r\n    /**\r\n     * Selected state display icon of the menu item. The icon value must be a string having SVG icon content.\r\n     */\r\n    public iconSelected?: string;\r\n    /**\r\n     * Additional information for accessibility.\r\n     */\r\n    public contentDescription?: string;\r\n    /**\r\n     * State of the menu item\r\n     */\r\n    public enabled: boolean = true;\r\n    /**\r\n     * Interface to show list of items on selection of menu item.\r\n     */\r\n    public viewData: ViewData;\r\n    /**\r\n     * Whether the menu item is selected or not\r\n     */\r\n    public selected: boolean = false;\r\n  }\r\n  /**\r\n   * Represents information about view to show on Navigation Bar Menu item selection\r\n   */\r\n  export interface ViewData {\r\n    /**\r\n     * Display header title of the item list.\r\n     */\r\n    listTitle?: string;\r\n    /**\r\n     * Type of the menu item.\r\n     */\r\n    listType: MenuListType;\r\n    /**\r\n     * Array of MenuItem. Icon value will be required for all items in the list.\r\n     */\r\n    listItems: MenuItem[];\r\n  }\r\n  /**\r\n   * Represents information about type of list to display in Navigation Bar Menu.\r\n   */\r\n  export enum MenuListType {\r\n    dropDown = 'dropDown',\r\n    popOver = 'popOver',\r\n  }\r\n  let navBarMenuItemPressHandler: (id: string) => boolean;\r\n  GlobalVars.handlers['navBarMenuItemPress'] = handleNavBarMenuItemPress;\r\n  let actionMenuItemPressHandler: (id: string) => boolean;\r\n  GlobalVars.handlers['actionMenuItemPress'] = handleActionMenuItemPress;\r\n  let viewConfigItemPressHandler: (id: string) => boolean;\r\n  GlobalVars.handlers['setModuleView'] = handleViewConfigItemPress;\r\n  /**\r\n   * Registers list of view configurations and it's handler.\r\n   * Handler is responsible for listening selection of View Configuration.\r\n   * @param viewConfig List of view configurations. Minimum 1 value is required.\r\n   * @param handler The handler to invoke when the user selects view configuration.\r\n   */\r\n  export function setUpViews(viewConfig: ViewConfiguration[], handler: (id: string) => boolean): void {\r\n    ensureInitialized();\r\n    viewConfigItemPressHandler = handler;\r\n    sendMessageRequestToParent('setUpViews', [viewConfig]);\r\n  }\r\n  function handleViewConfigItemPress(id: string): void {\r\n    if (!viewConfigItemPressHandler || !viewConfigItemPressHandler(id)) {\r\n      ensureInitialized();\r\n      sendMessageRequestToParent('viewConfigItemPress', [id]);\r\n    }\r\n  }\r\n  /**\r\n   * Used to set menu items on the Navigation Bar. If icon is available, icon will be shown, otherwise title will be shown.\r\n   * @param items List of MenuItems for Navigation Bar Menu.\r\n   * @param handler The handler to invoke when the user selects menu item.\r\n   */\r\n  export function setNavBarMenu(items: MenuItem[], handler: (id: string) => boolean): void {\r\n    ensureInitialized();\r\n    navBarMenuItemPressHandler = handler;\r\n    sendMessageRequestToParent('setNavBarMenu', [items]);\r\n  }\r\n  function handleNavBarMenuItemPress(id: string): void {\r\n    if (!navBarMenuItemPressHandler || !navBarMenuItemPressHandler(id)) {\r\n      ensureInitialized();\r\n      sendMessageRequestToParent('handleNavBarMenuItemPress', [id]);\r\n    }\r\n  }\r\n  export interface ActionMenuParameters {\r\n    /**\r\n     * Display title for Action Menu\r\n     */\r\n    title: string;\r\n    /**\r\n     * List of MenuItems for Action Menu\r\n     */\r\n    items: MenuItem[];\r\n  }\r\n  /**\r\n   * Used to show Action Menu.\r\n   * @param params Parameters for Menu Parameters\r\n   * @param handler The handler to invoke when the user selects menu item.\r\n   */\r\n  export function showActionMenu(params: ActionMenuParameters, handler: (id: string) => boolean): void {\r\n    ensureInitialized();\r\n    actionMenuItemPressHandler = handler;\r\n    sendMessageRequestToParent('showActionMenu', [params]);\r\n  }\r\n  function handleActionMenuItemPress(id: string): void {\r\n    if (!actionMenuItemPressHandler || !actionMenuItemPressHandler(id)) {\r\n      ensureInitialized();\r\n      sendMessageRequestToParent('handleActionMenuItemPress', [id]);\r\n    }\r\n  }\r\n}\r\n","import { TeamInformation } from '../public/interfaces';\r\n/**\r\n * @private\r\n * Hide from docs\r\n * --------\r\n * Information about all members in a chat\r\n */\r\nexport interface ChatMembersInformation {\r\n  members: ThreadMember[];\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs\r\n * --------\r\n * Information about a chat member\r\n */\r\nexport interface ThreadMember {\r\n  /**\r\n   * The member's user principal name in the current tenant.\r\n   */\r\n  upn: string;\r\n}\r\n\r\nexport enum NotificationTypes {\r\n  fileDownloadStart = 'fileDownloadStart',\r\n  fileDownloadComplete = 'fileDownloadComplete',\r\n}\r\n\r\nexport interface ShowNotificationParameters {\r\n  message: string;\r\n  notificationType: NotificationTypes;\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs.\r\n * ------\r\n */\r\nexport enum ViewerActionTypes {\r\n  view = 'view',\r\n  edit = 'edit',\r\n  editNew = 'editNew',\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs.\r\n * ------\r\n */\r\nexport interface FilePreviewParameters {\r\n  /**\r\n   * The developer-defined unique ID for the file.\r\n   */\r\n  entityId: string;\r\n\r\n  /**\r\n   * The display name of the file.\r\n   */\r\n  title: string;\r\n\r\n  /**\r\n   * An optional description of the file.\r\n   */\r\n  description?: string;\r\n\r\n  /**\r\n   * The file extension; e.g. pptx, docx, etc.\r\n   */\r\n  type: string;\r\n\r\n  /**\r\n   * A url to the source of the file, used to open the content in the user's default browser\r\n   */\r\n  objectUrl: string;\r\n\r\n  /**\r\n   * Optional; an alternate self-authenticating url used to preview the file in Mobile clients and offer it for download by the user\r\n   */\r\n  downloadUrl?: string;\r\n\r\n  /**\r\n   * Optional; an alternate url optimized for previewing the file in Teams web and desktop clients\r\n   */\r\n  webPreviewUrl?: string;\r\n\r\n  /**\r\n   * Optional; an alternate url that allows editing of the file in Teams web and desktop clients\r\n   */\r\n  webEditUrl?: string;\r\n\r\n  /**\r\n   * Optional; the base url of the site where the file is hosted\r\n   */\r\n  baseUrl?: string;\r\n\r\n  /**\r\n   * Deprecated; prefer using viewerAction instead\r\n   * Optional; indicates whether the file should be opened in edit mode\r\n   */\r\n  editFile?: boolean;\r\n\r\n  /**\r\n   * Optional; the developer-defined unique ID for the sub-entity to return to when the file stage closes.\r\n   * This field should be used to restore to a specific state within an entity, such as scrolling to or activating a specific piece of content.\r\n   */\r\n  subEntityId?: string;\r\n\r\n  /**\r\n   * Optional; indicates the mode in which file should be opened. Takes precedence over edit mode.\r\n   */\r\n  viewerAction?: ViewerActionTypes;\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs\r\n * --------\r\n * Query parameters used when fetching team information\r\n */\r\nexport interface TeamInstanceParameters {\r\n  /**\r\n   * Flag allowing to select favorite teams only\r\n   */\r\n  favoriteTeamsOnly?: boolean;\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs\r\n * --------\r\n * Information on userJoined Teams\r\n */\r\nexport interface UserJoinedTeamsInformation {\r\n  /**\r\n   * List of team information\r\n   */\r\n  userJoinedTeams: TeamInformation[];\r\n}\r\n","import { ensureInitialized, sendMessageRequestToParent, sendMessageEventToChild } from '../internal/internalAPIs';\r\nimport { GlobalVars } from '../internal/globalVars';\r\nimport { FrameContexts } from '../public/constants';\r\nimport {\r\n  ChatMembersInformation,\r\n  ShowNotificationParameters,\r\n  FilePreviewParameters,\r\n  TeamInstanceParameters,\r\n  UserJoinedTeamsInformation,\r\n} from './interfaces';\r\nimport { getGenericOnCompleteHandler } from '../internal/utils';\r\n\r\n/**\r\n * @private\r\n * Hide from docs\r\n * ------\r\n * Allows an app to retrieve information of all user joined teams\r\n * @param callback The callback to invoke when the {@link TeamInstanceParameters} object is retrieved.\r\n * @param teamInstanceParameters OPTIONAL Flags that specify whether to scope call to favorite teams\r\n */\r\nexport function getUserJoinedTeams(\r\n  callback: (userJoinedTeamsInformation: UserJoinedTeamsInformation) => void,\r\n  teamInstanceParameters?: TeamInstanceParameters,\r\n): void {\r\n  ensureInitialized();\r\n\r\n  const messageId = sendMessageRequestToParent('getUserJoinedTeams', [teamInstanceParameters]);\r\n  GlobalVars.callbacks[messageId] = callback;\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs\r\n * ------\r\n * Place the tab into full-screen mode.\r\n */\r\nexport function enterFullscreen(): void {\r\n  ensureInitialized(FrameContexts.content);\r\n  sendMessageRequestToParent('enterFullscreen', []);\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs\r\n * ------\r\n * Reverts the tab into normal-screen mode.\r\n */\r\nexport function exitFullscreen(): void {\r\n  ensureInitialized(FrameContexts.content);\r\n  sendMessageRequestToParent('exitFullscreen', []);\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs.\r\n * ------\r\n * Opens a client-friendly preview of the specified file.\r\n * @param file The file to preview.\r\n */\r\nexport function openFilePreview(filePreviewParameters: FilePreviewParameters): void {\r\n  ensureInitialized(FrameContexts.content);\r\n\r\n  const params = [\r\n    filePreviewParameters.entityId,\r\n    filePreviewParameters.title,\r\n    filePreviewParameters.description,\r\n    filePreviewParameters.type,\r\n    filePreviewParameters.objectUrl,\r\n    filePreviewParameters.downloadUrl,\r\n    filePreviewParameters.webPreviewUrl,\r\n    filePreviewParameters.webEditUrl,\r\n    filePreviewParameters.baseUrl,\r\n    filePreviewParameters.editFile,\r\n    filePreviewParameters.subEntityId,\r\n    filePreviewParameters.viewerAction,\r\n  ];\r\n\r\n  sendMessageRequestToParent('openFilePreview', params);\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs.\r\n * ------\r\n * display notification API.\r\n * @param message Notification message.\r\n * @param notificationType Notification type\r\n */\r\nexport function showNotification(showNotificationParameters: ShowNotificationParameters): void {\r\n  ensureInitialized(FrameContexts.content);\r\n  const params = [showNotificationParameters.message, showNotificationParameters.notificationType];\r\n  sendMessageRequestToParent('showNotification', params);\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs.\r\n * ------\r\n * Upload a custom App manifest directly to both team and personal scopes.\r\n * This method works just for the first party Apps.\r\n */\r\nexport function uploadCustomApp(manifestBlob: Blob, onComplete?: (status: boolean, reason?: string) => void): void {\r\n  ensureInitialized();\r\n\r\n  const messageId = sendMessageRequestToParent('uploadCustomApp', [manifestBlob]);\r\n  GlobalVars.callbacks[messageId] = onComplete ? onComplete : getGenericOnCompleteHandler();\r\n}\r\n\r\n/**\r\n * @private\r\n * Internal use only\r\n * Sends a custom action MessageRequest to Teams or parent window\r\n * @param actionName Specifies name of the custom action to be sent\r\n * @param args Specifies additional arguments passed to the action\r\n * @param callback Optionally specify a callback to receive response parameters from the parent\r\n * @returns id of sent message\r\n */\r\nexport function sendCustomMessage(\r\n  actionName: string,\r\n  // tslint:disable-next-line:no-any\r\n  args?: any[],\r\n  // tslint:disable-next-line:no-any\r\n  callback?: (...args: any[]) => void,\r\n): number {\r\n  ensureInitialized();\r\n\r\n  const messageId = sendMessageRequestToParent(actionName, args);\r\n  if (typeof callback === 'function') {\r\n    GlobalVars.callbacks[messageId] = (...args: any[]): void => {\r\n      callback.apply(null, args);\r\n    };\r\n  }\r\n  return messageId;\r\n}\r\n\r\n/**\r\n * @private\r\n * Internal use only\r\n * Sends a custom action MessageEvent to a child iframe/window, only if you are not using auth popup.\r\n * Otherwise it will go to the auth popup (which becomes the child)\r\n * @param actionName Specifies name of the custom action to be sent\r\n * @param args Specifies additional arguments passed to the action\r\n * @returns id of sent message\r\n */\r\nexport function sendCustomEvent(\r\n  actionName: string,\r\n  // tslint:disable-next-line:no-any\r\n  args?: any[],\r\n): void {\r\n  ensureInitialized();\r\n\r\n  //validate childWindow\r\n  if (!GlobalVars.childWindow) {\r\n    throw new Error('The child window has not yet been initialized or is not present');\r\n  }\r\n  sendMessageEventToChild(actionName, args);\r\n}\r\n\r\n/**\r\n * @private\r\n * Internal use only\r\n * Adds a handler for an action sent by a child window or parent window\r\n * @param actionName Specifies name of the action message to handle\r\n * @param customHandler The callback to invoke when the action message is received. The return value is sent to the child\r\n */\r\nexport function registerCustomHandler(\r\n  actionName: string,\r\n  customHandler: (\r\n    // tslint:disable-next-line:no-any\r\n    ...args: any[]\r\n  ) => any[],\r\n): void {\r\n  ensureInitialized();\r\n  GlobalVars.handlers[actionName] = (...args: any[]) => {\r\n    return customHandler.apply(this, args);\r\n  };\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs\r\n * ------\r\n * Allows an app to retrieve information of all chat members\r\n * Because a malicious party run your content in a browser, this value should\r\n * be used only as a hint as to who the members are and never as proof of membership.\r\n * @param callback The callback to invoke when the {@link ChatMembersInformation} object is retrieved.\r\n */\r\nexport function getChatMembers(callback: (chatMembersInformation: ChatMembersInformation) => void): void {\r\n  ensureInitialized();\r\n\r\n  const messageId = sendMessageRequestToParent('getChatMembers');\r\n  GlobalVars.callbacks[messageId] = callback;\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs\r\n * ------\r\n * Allows an app to get the configuration setting value\r\n * @param callback The callback to invoke when the value is retrieved.\r\n * @param key The key for the config setting\r\n */\r\nexport function getConfigSetting(callback: (value: string) => void, key: string): void {\r\n  ensureInitialized();\r\n\r\n  const messageId = sendMessageRequestToParent('getConfigSetting', [key]);\r\n  GlobalVars.callbacks[messageId] = callback;\r\n}\r\n","import { ensureInitialized, sendMessageRequestToParent } from '../internal/internalAPIs';\r\nimport { GlobalVars } from '../internal/globalVars';\r\nimport { FrameContexts } from '../public/constants';\r\nimport { OpenConversationRequest } from '../public/interfaces';\r\n\r\n/**\r\n * Namespace to interact with the conversational subEntities inside the tab\r\n */\r\nexport namespace conversations {\r\n  /**\r\n   * @private\r\n   * Hide from docs\r\n   * --------------\r\n   * Allows the user to start or continue a conversation with each subentity inside the tab\r\n   */\r\n  export function openConversation(openConversationRequest: OpenConversationRequest): void {\r\n    ensureInitialized(FrameContexts.content);\r\n    const messageId = sendMessageRequestToParent('conversations.openConversation', [\r\n      {\r\n        title: openConversationRequest.title,\r\n        subEntityId: openConversationRequest.subEntityId,\r\n        conversationId: openConversationRequest.conversationId,\r\n        channelId: openConversationRequest.channelId,\r\n        entityId: openConversationRequest.entityId,\r\n      },\r\n    ]);\r\n    GlobalVars.onCloseConversationHandler = openConversationRequest.onCloseConversation;\r\n    GlobalVars.onStartConversationHandler = openConversationRequest.onStartConversation;\r\n    GlobalVars.callbacks[messageId] = (status: boolean, reason: string) => {\r\n      if (!status) {\r\n        throw new Error(reason);\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs\r\n   * --------------\r\n   * Allows the user to close the conversation in the right pane\r\n   */\r\n  export function closeConversation(): void {\r\n    ensureInitialized(FrameContexts.content);\r\n    sendMessageRequestToParent('conversations.closeConversation');\r\n    GlobalVars.onCloseConversationHandler = null;\r\n    GlobalVars.onStartConversationHandler = null;\r\n  }\r\n}\r\n","import { ensureInitialized, sendMessageRequestToParent } from '../internal/internalAPIs';\r\nimport { GlobalVars } from '../internal/globalVars';\r\nimport { SdkError } from '../public/interfaces';\r\n\r\nexport namespace meetingRoom {\r\n  /**\r\n   * @private\r\n   * Hide from docs\r\n   *\r\n   * Data structure to represent a meeting room.\r\n   */\r\n  export interface MeetingRoomInfo {\r\n    /**\r\n     * Endpoint id of the meeting room.\r\n     */\r\n    endpointId: string;\r\n    /**\r\n     * Device name of the meeting room.\r\n     */\r\n    deviceName: string;\r\n    /**\r\n     * Client type of the meeting room.\r\n     */\r\n    clientType: string;\r\n    /**\r\n     * Client version of the meeting room.\r\n     */\r\n    clientVersion: string;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs\r\n   *\r\n   * Enum used to indicate meeting room capabilities.\r\n   */\r\n  export enum Capability {\r\n    /**\r\n     * Media control capability: toggle mute.\r\n     */\r\n    toggleMute = 'toggleMute',\r\n    /**\r\n     * Media control capability: toggle camera.\r\n     */\r\n    toggleCamera = 'toggleCamera',\r\n    /**\r\n     * Media control capability: toggle captions.\r\n     */\r\n    toggleCaptions = 'toggleCaptions',\r\n    /**\r\n     * Media control capability: volume ajustion.\r\n     */\r\n    volume = 'volume',\r\n    /**\r\n     * Stage layout control capability: show gallery mode.\r\n     */\r\n    showVideoGallery = 'showVideoGallery',\r\n    /**\r\n     * Stage layout control capability: show content mode.\r\n     */\r\n    showContent = 'showContent',\r\n    /**\r\n     * Stage layout control capability: show content + gallery mode.\r\n     */\r\n    showVideoGalleryAndContent = 'showVideoGalleryAndContent',\r\n    /**\r\n     * Stage layout control capability: show laryge gallery mode.\r\n     */\r\n    showLargeGallery = 'showLargeGallery',\r\n    /**\r\n     * Stage layout control capability: show together mode.\r\n     */\r\n    showTogether = 'showTogether',\r\n    /**\r\n     * Meeting control capability: leave meeting.\r\n     */\r\n    leaveMeeting = 'leaveMeeting',\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs\r\n   *\r\n   * Data structure to represent capabilities of a meeting room.\r\n   */\r\n  export interface MeetingRoomCapability {\r\n    /**\r\n     * Media control capabilities, value can be \"toggleMute\", \"toggleCamera\", \"toggleCaptions\", \"volume\".\r\n     */\r\n    mediaControls: string[];\r\n    /**\r\n     * Main stage layout control capabilities, value can be \"showVideoGallery\", \"showContent\", \"showVideoGalleryAndContent\", \"showLargeGallery\", \"showTogether\".\r\n     */\r\n    stageLayoutControls: string[];\r\n    /**\r\n     * Meeting control capabilities, value can be \"leaveMeeting\".\r\n     */\r\n    meetingControls: string[];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs\r\n   *\r\n   * Data structure to represent states of a meeting room.\r\n   */\r\n  export interface MeetingRoomState {\r\n    /**\r\n     * Current mute state, true: mute, false: unmute.\r\n     */\r\n    toggleMute: boolean;\r\n    /**\r\n     * Current camera state, true: camera on, false: camera off.\r\n     */\r\n    toggleCamera: boolean;\r\n    /**\r\n     * Current captions state, true: captions on, false: captions off.\r\n     */\r\n    toggleCaptions: boolean;\r\n    /**\r\n     * Current main stage layout state, value can be one of \"Gallery\", \"Content + gallery\", \"Content\", \"Large gallery\" and \"Together mode\".\r\n     */\r\n    stageLayout: string;\r\n    /**\r\n     * Current leaveMeeting state, true: leave, false: no-op.\r\n     */\r\n    leaveMeeting: boolean;\r\n  }\r\n\r\n  GlobalVars.handlers['meetingRoom.meetingRoomCapabilitiesUpdate'] = handleMeetingRoomCapabilitiesUpdate;\r\n  GlobalVars.handlers['meetingRoom.meetingRoomStatesUpdate'] = handleMeetingRoomStatesUpdate;\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs\r\n   *\r\n   * Fetch the meeting room info that paired with current client.\r\n   * @param callback Callback to invoke when the meeting room info is fetched.\r\n   */\r\n  export function getPairedMeetingRoomInfo(\r\n    callback: (sdkError: SdkError, meetingRoomInfo: MeetingRoomInfo) => void,\r\n  ): void {\r\n    ensureInitialized();\r\n    const messageId = sendMessageRequestToParent('meetingRoom.getPairedMeetingRoomInfo');\r\n    GlobalVars.callbacks[messageId] = callback;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs\r\n   *\r\n   * Send a command to paired meeting room.\r\n   * @param commandName The command name.\r\n   * @param callback Callback to invoke when the command response returns.\r\n   */\r\n  export function sendCommandToPairedMeetingRoom(commandName: string, callback: (sdkError: SdkError) => void): void {\r\n    if (!commandName || commandName.length == 0) {\r\n      throw new Error('[meetingRoom.sendCommandToPairedMeetingRoom] Command name cannot be null or empty');\r\n    }\r\n    if (!callback) {\r\n      throw new Error('[meetingRoom.sendCommandToPairedMeetingRoom] Callback cannot be null');\r\n    }\r\n    ensureInitialized();\r\n    const messageId = sendMessageRequestToParent('meetingRoom.sendCommandToPairedMeetingRoom', [commandName]);\r\n    GlobalVars.callbacks[messageId] = callback;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs\r\n   *\r\n   * Registers a handler for meeting room capabilities update.\r\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\r\n   * @param handler The handler to invoke when the capabilities of meeting room update.\r\n   */\r\n  export function registerMeetingRoomCapabilitiesUpdateHandler(\r\n    handler: (capabilities: MeetingRoomCapability) => void,\r\n  ): void {\r\n    if (!handler) {\r\n      throw new Error('[meetingRoom.registerMeetingRoomCapabilitiesUpdateHandler] Handler cannot be null');\r\n    }\r\n    ensureInitialized();\r\n    GlobalVars.meetingRoomCapabilitiesUpdateHandler = handler;\r\n    handler && sendMessageRequestToParent('registerHandler', ['meetingRoom.meetingRoomCapabilitiesUpdate']);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs\r\n   * Registers a handler for meeting room states update.\r\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\r\n   * @param handler The handler to invoke when the states of meeting room update.\r\n   */\r\n  export function registerMeetingRoomStatesUpdateHandler(handler: (states: MeetingRoomState) => void): void {\r\n    if (!handler) {\r\n      throw new Error('[meetingRoom.registerMeetingRoomStatesUpdateHandler] Handler cannot be null');\r\n    }\r\n    ensureInitialized();\r\n    GlobalVars.meetingRoomStatesUpdateHandler = handler;\r\n    handler && sendMessageRequestToParent('registerHandler', ['meetingRoom.meetingRoomStatesUpdate']);\r\n  }\r\n\r\n  function handleMeetingRoomCapabilitiesUpdate(capabilities: MeetingRoomCapability): void {\r\n    if (GlobalVars.meetingRoomCapabilitiesUpdateHandler != null) {\r\n      ensureInitialized();\r\n      GlobalVars.meetingRoomCapabilitiesUpdateHandler(capabilities);\r\n    }\r\n  }\r\n\r\n  function handleMeetingRoomStatesUpdate(states: MeetingRoomState): void {\r\n    if (GlobalVars.meetingRoomStatesUpdateHandler != null) {\r\n      ensureInitialized();\r\n      GlobalVars.meetingRoomStatesUpdateHandler(states);\r\n    }\r\n  }\r\n}\r\n","export { appInitialization } from './appInitialization';\r\nexport { authentication } from './authentication';\r\nexport { FrameContexts, HostClientType, TaskModuleDimension, TeamType, UserTeamRole, ChannelType } from './constants';\r\nexport {\r\n  Context,\r\n  DeepLinkParameters,\r\n  ErrorCode,\r\n  LoadContext,\r\n  SdkError,\r\n  TabInformation,\r\n  TabInstance,\r\n  TabInstanceParameters,\r\n  TaskInfo,\r\n  TeamInformation,\r\n} from './interfaces';\r\nexport {\r\n  enablePrintCapability,\r\n  executeDeepLink,\r\n  getContext,\r\n  getMruTabInstances,\r\n  getTabInstances,\r\n  initialize,\r\n  initializeWithFrameContext,\r\n  print,\r\n  registerBackButtonHandler,\r\n  registerBeforeUnloadHandler,\r\n  registerChangeSettingsHandler,\r\n  registerFullScreenHandler,\r\n  registerOnLoadHandler,\r\n  registerOnThemeChangeHandler,\r\n  registerAppButtonClickHandler,\r\n  registerAppButtonHoverEnterHandler,\r\n  registerAppButtonHoverLeaveHandler,\r\n  setFrameContext,\r\n  shareDeepLink,\r\n} from './publicAPIs';\r\nexport { returnFocus, navigateBack, navigateCrossDomain, navigateToTab } from './navigation';\r\nexport { settings } from './settings';\r\nexport { tasks } from './tasks';\r\nexport { ChildAppWindow, IAppWindow, ParentAppWindow } from './appWindow';\r\nexport { media } from './media';\r\nexport { location } from './location';\r\nexport { meeting } from './meeting';\r\n","import { ensureInitialized, sendMessageRequestToParent } from '../internal/internalAPIs';\r\nimport { version } from '../internal/constants';\r\n\r\nexport namespace appInitialization {\r\n  /**\r\n   * To notify app loaded to hide loading indicator\r\n   */\r\n  export function notifyAppLoaded(): void {\r\n    ensureInitialized();\r\n    sendMessageRequestToParent('appInitialization.appLoaded', [version]);\r\n  }\r\n\r\n  /**\r\n   * To notify app Initialization successs and ready for user interaction\r\n   */\r\n  export function notifySuccess(): void {\r\n    ensureInitialized();\r\n    sendMessageRequestToParent('appInitialization.success', [version]);\r\n  }\r\n\r\n  /**\r\n   * To notify app Initialization failed\r\n   */\r\n  export function notifyFailure(appInitializationFailedRequest: appInitialization.IFailedRequest): void {\r\n    ensureInitialized();\r\n    sendMessageRequestToParent('appInitialization.failure', [\r\n      appInitializationFailedRequest.reason,\r\n      appInitializationFailedRequest.message,\r\n    ]);\r\n  }\r\n\r\n  export enum FailedReason {\r\n    AuthFailed = 'AuthFailed',\r\n    Timeout = 'Timeout',\r\n    Other = 'Other',\r\n  }\r\n\r\n  export interface IFailedRequest {\r\n    reason: appInitialization.FailedReason;\r\n    message?: string;\r\n  }\r\n}\r\n","import {\r\n  ensureInitialized,\r\n  sendMessageRequestToParent,\r\n  waitForMessageQueue,\r\n  sendMessageEventToChild,\r\n} from '../internal/internalAPIs';\r\nimport { GlobalVars } from '../internal/globalVars';\r\nimport { FrameContexts, HostClientType } from './constants';\r\n\r\n/**\r\n * Namespace to interact with the authentication-specific part of the SDK.\r\n * This object is used for starting or completing authentication flows.\r\n */\r\nexport namespace authentication {\r\n  let authParams: AuthenticateParameters;\r\n  let authWindowMonitor: number;\r\n  GlobalVars.handlers['authentication.authenticate.success'] = handleSuccess;\r\n  GlobalVars.handlers['authentication.authenticate.failure'] = handleFailure;\r\n\r\n  /**\r\n   * Registers the authentication GlobalVars.handlers\r\n   * @param authenticateParameters A set of values that configure the authentication pop-up.\r\n   */\r\n  export function registerAuthenticationHandlers(authenticateParameters: AuthenticateParameters): void {\r\n    authParams = authenticateParameters;\r\n  }\r\n\r\n  /**\r\n   * Initiates an authentication request, which opens a new window with the specified settings.\r\n   */\r\n  export function authenticate(authenticateParameters?: AuthenticateParameters): void {\r\n    const authenticateParams = authenticateParameters !== undefined ? authenticateParameters : authParams;\r\n    ensureInitialized(\r\n      FrameContexts.content,\r\n      FrameContexts.sidePanel,\r\n      FrameContexts.settings,\r\n      FrameContexts.remove,\r\n      FrameContexts.task,\r\n      FrameContexts.stage,\r\n    );\r\n    if (\r\n      GlobalVars.hostClientType === HostClientType.desktop ||\r\n      GlobalVars.hostClientType === HostClientType.android ||\r\n      GlobalVars.hostClientType === HostClientType.ios ||\r\n      GlobalVars.hostClientType === HostClientType.rigel\r\n    ) {\r\n      // Convert any relative URLs into absolute URLs before sending them over to the parent window.\r\n      const link = document.createElement('a');\r\n      link.href = authenticateParams.url;\r\n      // Ask the parent window to open an authentication window with the parameters provided by the caller.\r\n      const messageId = sendMessageRequestToParent('authentication.authenticate', [\r\n        link.href,\r\n        authenticateParams.width,\r\n        authenticateParams.height,\r\n      ]);\r\n      GlobalVars.callbacks[messageId] = (success: boolean, response: string) => {\r\n        if (success) {\r\n          authenticateParams.successCallback(response);\r\n        } else {\r\n          authenticateParams.failureCallback(response);\r\n        }\r\n      };\r\n    } else {\r\n      // Open an authentication window with the parameters provided by the caller.\r\n      openAuthenticationWindow(authenticateParams);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Requests an Azure AD token to be issued on behalf of the app. The token is acquired from the cache\r\n   * if it is not expired. Otherwise a request is sent to Azure AD to obtain a new token.\r\n   * @param authTokenRequest A set of values that configure the token request.\r\n   */\r\n  export function getAuthToken(authTokenRequest: AuthTokenRequest): void {\r\n    ensureInitialized();\r\n    const messageId = sendMessageRequestToParent('authentication.getAuthToken', [\r\n      authTokenRequest.resources,\r\n      authTokenRequest.claims,\r\n      authTokenRequest.silent,\r\n    ]);\r\n    GlobalVars.callbacks[messageId] = (success: boolean, result: string) => {\r\n      if (success) {\r\n        authTokenRequest.successCallback(result);\r\n      } else {\r\n        authTokenRequest.failureCallback(result);\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs.\r\n   * ------\r\n   * Requests the decoded Azure AD user identity on behalf of the app.\r\n   */\r\n  export function getUser(userRequest: UserRequest): void {\r\n    ensureInitialized();\r\n    const messageId = sendMessageRequestToParent('authentication.getUser');\r\n    GlobalVars.callbacks[messageId] = (success: boolean, result: UserProfile | string) => {\r\n      if (success) {\r\n        userRequest.successCallback(result as UserProfile);\r\n      } else {\r\n        userRequest.failureCallback(result as string);\r\n      }\r\n    };\r\n  }\r\n\r\n  function closeAuthenticationWindow(): void {\r\n    // Stop monitoring the authentication window\r\n    stopAuthenticationWindowMonitor();\r\n    // Try to close the authentication window and clear all properties associated with it\r\n    try {\r\n      if (GlobalVars.childWindow) {\r\n        GlobalVars.childWindow.close();\r\n      }\r\n    } finally {\r\n      GlobalVars.childWindow = null;\r\n      GlobalVars.childOrigin = null;\r\n    }\r\n  }\r\n\r\n  function openAuthenticationWindow(authenticateParameters: AuthenticateParameters): void {\r\n    authParams = authenticateParameters;\r\n    // Close the previously opened window if we have one\r\n    closeAuthenticationWindow();\r\n    // Start with a sensible default size\r\n    let width = authParams.width || 600;\r\n    let height = authParams.height || 400;\r\n    // Ensure that the new window is always smaller than our app's window so that it never fully covers up our app\r\n    width = Math.min(width, GlobalVars.currentWindow.outerWidth - 400);\r\n    height = Math.min(height, GlobalVars.currentWindow.outerHeight - 200);\r\n    // Convert any relative URLs into absolute URLs before sending them over to the parent window\r\n    const link = document.createElement('a');\r\n    link.href = authParams.url;\r\n    // We are running in the browser, so we need to center the new window ourselves\r\n    let left: number =\r\n      typeof GlobalVars.currentWindow.screenLeft !== 'undefined'\r\n        ? GlobalVars.currentWindow.screenLeft\r\n        : GlobalVars.currentWindow.screenX;\r\n    let top: number =\r\n      typeof GlobalVars.currentWindow.screenTop !== 'undefined'\r\n        ? GlobalVars.currentWindow.screenTop\r\n        : GlobalVars.currentWindow.screenY;\r\n    left += GlobalVars.currentWindow.outerWidth / 2 - width / 2;\r\n    top += GlobalVars.currentWindow.outerHeight / 2 - height / 2;\r\n    // Open a child window with a desired set of standard browser features\r\n    GlobalVars.childWindow = GlobalVars.currentWindow.open(\r\n      link.href,\r\n      '_blank',\r\n      'toolbar=no, location=yes, status=no, menubar=no, scrollbars=yes, top=' +\r\n        top +\r\n        ', left=' +\r\n        left +\r\n        ', width=' +\r\n        width +\r\n        ', height=' +\r\n        height,\r\n    );\r\n    if (GlobalVars.childWindow) {\r\n      // Start monitoring the authentication window so that we can detect if it gets closed before the flow completes\r\n      startAuthenticationWindowMonitor();\r\n    } else {\r\n      // If we failed to open the window, fail the authentication flow\r\n      handleFailure('FailedToOpenWindow');\r\n    }\r\n  }\r\n\r\n  function stopAuthenticationWindowMonitor(): void {\r\n    if (authWindowMonitor) {\r\n      clearInterval(authWindowMonitor);\r\n      authWindowMonitor = 0;\r\n    }\r\n    delete GlobalVars.handlers['initialize'];\r\n    delete GlobalVars.handlers['navigateCrossDomain'];\r\n  }\r\n\r\n  function startAuthenticationWindowMonitor(): void {\r\n    // Stop the previous window monitor if one is running\r\n    stopAuthenticationWindowMonitor();\r\n    // Create an interval loop that\r\n    // - Notifies the caller of failure if it detects that the authentication window is closed\r\n    // - Keeps pinging the authentication window while it is open to re-establish\r\n    //   contact with any pages along the authentication flow that need to communicate\r\n    //   with us\r\n    authWindowMonitor = GlobalVars.currentWindow.setInterval(() => {\r\n      if (!GlobalVars.childWindow || GlobalVars.childWindow.closed) {\r\n        handleFailure('CancelledByUser');\r\n      } else {\r\n        const savedChildOrigin = GlobalVars.childOrigin;\r\n        try {\r\n          GlobalVars.childOrigin = '*';\r\n          sendMessageEventToChild('ping');\r\n        } finally {\r\n          GlobalVars.childOrigin = savedChildOrigin;\r\n        }\r\n      }\r\n    }, 100);\r\n    // Set up an initialize-message handler that gives the authentication window its frame context\r\n    GlobalVars.handlers['initialize'] = () => {\r\n      return [FrameContexts.authentication, GlobalVars.hostClientType];\r\n    };\r\n    // Set up a navigateCrossDomain message handler that blocks cross-domain re-navigation attempts\r\n    // in the authentication window. We could at some point choose to implement this method via a call to\r\n    // authenticationWindow.location.href = url; however, we would first need to figure out how to\r\n    // validate the URL against the tab's list of valid domains.\r\n    GlobalVars.handlers['navigateCrossDomain'] = () => {\r\n      return false;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Notifies the frame that initiated this authentication request that the request was successful.\r\n   * This function is usable only on the authentication window.\r\n   * This call causes the authentication window to be closed.\r\n   * @param result Specifies a result for the authentication. If specified, the frame that initiated the authentication pop-up receives this value in its callback.\r\n   * @param callbackUrl Specifies the url to redirect back to if the client is Win32 Outlook.\r\n   */\r\n  export function notifySuccess(result?: string, callbackUrl?: string): void {\r\n    redirectIfWin32Outlook(callbackUrl, 'result', result);\r\n    ensureInitialized(FrameContexts.authentication);\r\n    sendMessageRequestToParent('authentication.authenticate.success', [result]);\r\n    // Wait for the message to be sent before closing the window\r\n    waitForMessageQueue(GlobalVars.parentWindow, () => setTimeout(() => GlobalVars.currentWindow.close(), 200));\r\n  }\r\n\r\n  /**\r\n   * Notifies the frame that initiated this authentication request that the request failed.\r\n   * This function is usable only on the authentication window.\r\n   * This call causes the authentication window to be closed.\r\n   * @param result Specifies a result for the authentication. If specified, the frame that initiated the authentication pop-up receives this value in its callback.\r\n   * @param callbackUrl Specifies the url to redirect back to if the client is Win32 Outlook.\r\n   */\r\n  export function notifyFailure(reason?: string, callbackUrl?: string): void {\r\n    redirectIfWin32Outlook(callbackUrl, 'reason', reason);\r\n    ensureInitialized(FrameContexts.authentication);\r\n    sendMessageRequestToParent('authentication.authenticate.failure', [reason]);\r\n    // Wait for the message to be sent before closing the window\r\n    waitForMessageQueue(GlobalVars.parentWindow, () => setTimeout(() => GlobalVars.currentWindow.close(), 200));\r\n  }\r\n\r\n  function handleSuccess(result?: string): void {\r\n    try {\r\n      if (authParams && authParams.successCallback) {\r\n        authParams.successCallback(result);\r\n      }\r\n    } finally {\r\n      authParams = null;\r\n      closeAuthenticationWindow();\r\n    }\r\n  }\r\n\r\n  function handleFailure(reason?: string): void {\r\n    try {\r\n      if (authParams && authParams.failureCallback) {\r\n        authParams.failureCallback(reason);\r\n      }\r\n    } finally {\r\n      authParams = null;\r\n      closeAuthenticationWindow();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates that the callbackUrl param is a valid connector url, appends the result/reason and authSuccess/authFailure as URL fragments and redirects the window\r\n   * @param callbackUrl - the connectors url to redirect to\r\n   * @param key - \"result\" in case of success and \"reason\" in case of failure\r\n   * @param value - the value of the passed result/reason parameter\r\n   */\r\n  function redirectIfWin32Outlook(callbackUrl?: string, key?: string, value?: string): void {\r\n    if (callbackUrl) {\r\n      const link = document.createElement('a');\r\n      link.href = decodeURIComponent(callbackUrl);\r\n      if (\r\n        link.host &&\r\n        link.host !== window.location.host &&\r\n        link.host === 'outlook.office.com' &&\r\n        link.search.indexOf('client_type=Win32_Outlook') > -1\r\n      ) {\r\n        if (key && key === 'result') {\r\n          if (value) {\r\n            link.href = updateUrlParameter(link.href, 'result', value);\r\n          }\r\n          GlobalVars.currentWindow.location.assign(updateUrlParameter(link.href, 'authSuccess', ''));\r\n        }\r\n        if (key && key === 'reason') {\r\n          if (value) {\r\n            link.href = updateUrlParameter(link.href, 'reason', value);\r\n          }\r\n          GlobalVars.currentWindow.location.assign(updateUrlParameter(link.href, 'authFailure', ''));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Appends either result or reason as a fragment to the 'callbackUrl'\r\n   * @param uri - the url to modify\r\n   * @param key - the fragment key\r\n   * @param value - the fragment value\r\n   */\r\n  function updateUrlParameter(uri: string, key: string, value: string): string {\r\n    const i = uri.indexOf('#');\r\n    let hash = i === -1 ? '#' : uri.substr(i);\r\n    hash = hash + '&' + key + (value !== '' ? '=' + value : '');\r\n    uri = i === -1 ? uri : uri.substr(0, i);\r\n    return uri + hash;\r\n  }\r\n\r\n  export interface AuthenticateParameters {\r\n    /**\r\n     * The URL for the authentication pop-up.\r\n     */\r\n    url: string;\r\n    /**\r\n     * The preferred width for the pop-up. This value can be ignored if outside the acceptable bounds.\r\n     */\r\n    width?: number;\r\n    /**\r\n     * The preferred height for the pop-up. This value can be ignored if outside the acceptable bounds.\r\n     */\r\n    height?: number;\r\n    /**\r\n     * A function that is called if the authentication succeeds, with the result returned from the authentication pop-up.\r\n     */\r\n    successCallback?: (result?: string) => void;\r\n    /**\r\n     * A function that is called if the authentication fails, with the reason for the failure returned from the authentication pop-up.\r\n     */\r\n    failureCallback?: (reason?: string) => void;\r\n  }\r\n\r\n  export interface AuthTokenRequest {\r\n    /**\r\n     * An optional list of resource for which to acquire the access token; only used for full trust apps.\r\n     */\r\n    resources?: string[];\r\n    /**\r\n     * An optional list of claims which to pass to AAD when requesting the access token.\r\n     */\r\n    claims?: string[];\r\n    /**\r\n     * An optional flag indicating whether to attempt the token acquisition silently or allow a prompt to be shown.\r\n     */\r\n    silent?: boolean;\r\n    /**\r\n     * A function that is called if the token request succeeds, with the resulting token.\r\n     */\r\n    successCallback?: (token: string) => void;\r\n    /**\r\n     * A function that is called if the token request fails, with the reason for the failure.\r\n     */\r\n    failureCallback?: (reason: string) => void;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs.\r\n   * ------\r\n   */\r\n  export interface UserRequest {\r\n    /**\r\n     * A function that is called if the token request succeeds, with the resulting token.\r\n     */\r\n    successCallback?: (user: UserProfile) => void;\r\n    /**\r\n     * A function that is called if the token request fails, with the reason for the failure.\r\n     */\r\n    failureCallback?: (reason: string) => void;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Hide from docs.\r\n   * ------\r\n   */\r\n  export interface UserProfile {\r\n    /**\r\n     * The intended recipient of the token. The application that receives the token must verify that the audience\r\n     * value is correct and reject any tokens intended for a different audience.\r\n     */\r\n    aud: string;\r\n    /**\r\n     * Identifies how the subject of the token was authenticated.\r\n     */\r\n    amr: string[];\r\n    /**\r\n     * Stores the time at which the token was issued. It is often used to measure token freshness.\r\n     */\r\n    iat: number;\r\n    /**\r\n     * Identifies the security token service (STS) that constructs and returns the token. In the tokens that Azure AD\r\n     * returns, the issuer is sts.windows.net. The GUID in the issuer claim value is the tenant ID of the Azure AD\r\n     * directory. The tenant ID is an immutable and reliable identifier of the directory.\r\n     */\r\n    iss: string;\r\n    /**\r\n     * Provides the last name, surname, or family name of the user as defined in the Azure AD user object.\r\n     */\r\n    family_name: string;\r\n    /**\r\n     * Provides the first or \"given\" name of the user, as set on the Azure AD user object.\r\n     */\r\n    given_name: string;\r\n    /**\r\n     * Provides a human-readable value that identifies the subject of the token. This value is not guaranteed to\r\n     * be unique within a tenant and is designed to be used only for display purposes.\r\n     */\r\n    unique_name: string;\r\n    /**\r\n     * Contains a unique identifier of an object in Azure AD. This value is immutable and cannot be reassigned or\r\n     * reused. Use the object ID to identify an object in queries to Azure AD.\r\n     */\r\n    oid: string;\r\n    /**\r\n     * Identifies the principal about which the token asserts information, such as the user of an application.\r\n     * This value is immutable and cannot be reassigned or reused, so it can be used to perform authorization\r\n     * checks safely. Because the subject is always present in the tokens the Azure AD issues, we recommended\r\n     * using this value in a general-purpose authorization system.\r\n     */\r\n    sub: string;\r\n    /**\r\n     * An immutable, non-reusable identifier that identifies the directory tenant that issued the token. You can\r\n     * use this value to access tenant-specific directory resources in a multitenant application. For example,\r\n     * you can use this value to identify the tenant in a call to the Graph API.\r\n     */\r\n    tid: string;\r\n    /**\r\n     * Defines the time interval within which a token is valid. The service that validates the token should verify\r\n     * that the current date is within the token lifetime; otherwise it should reject the token. The service might\r\n     * allow for up to five minutes beyond the token lifetime to account for any differences in clock time (\"time\r\n     * skew\") between Azure AD and the service.\r\n     */\r\n    exp: number;\r\n    nbf: number;\r\n    /**\r\n     * Stores the user name of the user principal.\r\n     */\r\n    upn: string;\r\n    /**\r\n     * Stores the version number of the token.\r\n     */\r\n    ver: string;\r\n  }\r\n}\r\n","import {\r\n  processMessage,\r\n  ensureInitialized,\r\n  sendMessageRequestToParent,\r\n  handleParentMessage,\r\n  processAdditionalValidOrigins,\r\n} from '../internal/internalAPIs';\r\nimport { GlobalVars } from '../internal/globalVars';\r\nimport { version, defaultSDKVersionForCompatCheck } from '../internal/constants';\r\nimport { ExtendedWindow, DOMMessageEvent } from '../internal/interfaces';\r\nimport { settings } from './settings';\r\nimport {\r\n  TabInformation,\r\n  TabInstanceParameters,\r\n  DeepLinkParameters,\r\n  Context,\r\n  LoadContext,\r\n  FrameContext,\r\n} from './interfaces';\r\nimport { getGenericOnCompleteHandler } from '../internal/utils';\r\nimport { logs } from '../private/logs';\r\nimport { FrameContexts } from './constants';\r\n\r\n// ::::::::::::::::::::::: MicrosoftTeams SDK public API ::::::::::::::::::::\r\n/**\r\n * Initializes the library. This must be called before any other SDK calls\r\n * but after the frame is loaded successfully.\r\n * @param callback Optionally specify a callback to invoke when Teams SDK has successfully initialized\r\n * @param validMessageOrigins Optionally specify a list of cross frame message origins. There must have\r\n * https: protocol otherwise they will be ignored. Example: https://www.example.com\r\n */\r\nexport function initialize(callback?: () => void, validMessageOrigins?: string[]): void {\r\n  // Independent components might not know whether the SDK is initialized so might call it to be safe.\r\n  // Just no-op if that happens to make it easier to use.\r\n  if (!GlobalVars.initializeCalled) {\r\n    GlobalVars.initializeCalled = true;\r\n\r\n    // Listen for messages post to our window\r\n    const messageListener = (evt: DOMMessageEvent): void => processMessage(evt);\r\n\r\n    // If we are in an iframe, our parent window is the one hosting us (i.e., window.parent); otherwise,\r\n    // it's the window that opened us (i.e., window.opener)\r\n    GlobalVars.currentWindow = GlobalVars.currentWindow || window;\r\n    GlobalVars.parentWindow =\r\n      GlobalVars.currentWindow.parent !== GlobalVars.currentWindow.self\r\n        ? GlobalVars.currentWindow.parent\r\n        : GlobalVars.currentWindow.opener;\r\n\r\n    // Listen to messages from the parent or child frame.\r\n    // Frameless windows will only receive this event from child frames and if validMessageOrigins is passed.\r\n    if (GlobalVars.parentWindow || validMessageOrigins) {\r\n      GlobalVars.currentWindow.addEventListener('message', messageListener, false);\r\n    }\r\n\r\n    if (!GlobalVars.parentWindow) {\r\n      GlobalVars.isFramelessWindow = true;\r\n      (window as ExtendedWindow).onNativeMessage = handleParentMessage;\r\n    }\r\n\r\n    try {\r\n      // Send the initialized message to any origin, because at this point we most likely don't know the origin\r\n      // of the parent window, and this message contains no data that could pose a security risk.\r\n      GlobalVars.parentOrigin = '*';\r\n      const messageId = sendMessageRequestToParent('initialize', [version]);\r\n      GlobalVars.callbacks[messageId] = (\r\n        context: FrameContexts,\r\n        clientType: string,\r\n        clientSupportedSDKVersion: string = defaultSDKVersionForCompatCheck,\r\n      ) => {\r\n        GlobalVars.frameContext = context;\r\n        GlobalVars.hostClientType = clientType;\r\n        GlobalVars.clientSupportedSDKVersion = clientSupportedSDKVersion;\r\n\r\n        // Notify all waiting callers that the initialization has completed\r\n        GlobalVars.initializeCallbacks.forEach(initCallback => initCallback());\r\n        GlobalVars.initializeCallbacks = [];\r\n        GlobalVars.initializeCompleted = true;\r\n      };\r\n    } finally {\r\n      GlobalVars.parentOrigin = null;\r\n    }\r\n\r\n    // Undocumented function used to clear state between unit tests\r\n    this._uninitialize = () => {\r\n      if (GlobalVars.frameContext) {\r\n        registerOnThemeChangeHandler(null);\r\n        registerFullScreenHandler(null);\r\n        registerBackButtonHandler(null);\r\n        registerBeforeUnloadHandler(null);\r\n        registerOnLoadHandler(null);\r\n        logs.registerGetLogHandler(null);\r\n      }\r\n\r\n      if (GlobalVars.frameContext === FrameContexts.settings) {\r\n        settings.registerOnSaveHandler(null);\r\n      }\r\n\r\n      if (GlobalVars.frameContext === FrameContexts.remove) {\r\n        settings.registerOnRemoveHandler(null);\r\n      }\r\n\r\n      GlobalVars.currentWindow.removeEventListener('message', messageListener, false);\r\n\r\n      GlobalVars.initializeCalled = false;\r\n      GlobalVars.initializeCompleted = false;\r\n      GlobalVars.initializeCallbacks = [];\r\n      GlobalVars.additionalValidOrigins = [];\r\n      GlobalVars.parentWindow = null;\r\n      GlobalVars.parentOrigin = null;\r\n      GlobalVars.parentMessageQueue = [];\r\n      GlobalVars.childWindow = null;\r\n      GlobalVars.childOrigin = null;\r\n      GlobalVars.childMessageQueue = [];\r\n      GlobalVars.nextMessageId = 0;\r\n      GlobalVars.callbacks = {};\r\n      GlobalVars.frameContext = null;\r\n      GlobalVars.hostClientType = null;\r\n      GlobalVars.isFramelessWindow = false;\r\n    };\r\n  }\r\n\r\n  // Handle additional valid message origins if specified\r\n  if (Array.isArray(validMessageOrigins)) {\r\n    processAdditionalValidOrigins(validMessageOrigins);\r\n  }\r\n\r\n  // Handle the callback if specified:\r\n  // 1. If initialization has already completed then just call it right away\r\n  // 2. If initialization hasn't completed then add it to the array of callbacks\r\n  //    that should be invoked once initialization does complete\r\n  if (callback) {\r\n    GlobalVars.initializeCompleted ? callback() : GlobalVars.initializeCallbacks.push(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs.\r\n * ------\r\n * Undocumented function used to set a mock window for unit tests\r\n */\r\nexport function _initialize(hostWindow: any): void {\r\n  GlobalVars.currentWindow = hostWindow;\r\n}\r\n\r\n/**\r\n * @private\r\n * Hide from docs.\r\n * ------\r\n * Undocumented function used to clear state between unit tests\r\n */\r\nexport function _uninitialize(): void {}\r\n\r\n/**\r\n * Enable print capability to support printing page using Ctrl+P and cmd+P\r\n */\r\nexport function enablePrintCapability(): void {\r\n  if (!GlobalVars.printCapabilityEnabled) {\r\n    GlobalVars.printCapabilityEnabled = true;\r\n    ensureInitialized();\r\n    // adding ctrl+P and cmd+P handler\r\n    document.addEventListener('keydown', (event: KeyboardEvent) => {\r\n      if ((event.ctrlKey || event.metaKey) && event.keyCode === 80) {\r\n        print();\r\n        event.cancelBubble = true;\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * default print handler\r\n */\r\nexport function print(): void {\r\n  window.print();\r\n}\r\n\r\n/**\r\n * Retrieves the current context the frame is running in.\r\n * @param callback The callback to invoke when the {@link Context} object is retrieved.\r\n */\r\nexport function getContext(callback: (context: Context) => void): void {\r\n  ensureInitialized();\r\n\r\n  const messageId = sendMessageRequestToParent('getContext');\r\n  GlobalVars.callbacks[messageId] = (context: Context) => {\r\n    if (!context.frameContext) {\r\n      // Fallback logic for frameContext properties\r\n      context.frameContext = GlobalVars.frameContext;\r\n    }\r\n    callback(context);\r\n  };\r\n}\r\n\r\n/**\r\n * Registers a handler for theme changes.\r\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\r\n * @param handler The handler to invoke when the user changes their theme.\r\n */\r\nexport function registerOnThemeChangeHandler(handler: (theme: string) => void): void {\r\n  ensureInitialized();\r\n  GlobalVars.themeChangeHandler = handler;\r\n  handler && sendMessageRequestToParent('registerHandler', ['themeChange']);\r\n}\r\n\r\n/**\r\n * Registers a handler for changes from or to full-screen view for a tab.\r\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\r\n * @param handler The handler to invoke when the user toggles full-screen view for a tab.\r\n */\r\nexport function registerFullScreenHandler(handler: (isFullScreen: boolean) => void): void {\r\n  ensureInitialized();\r\n\r\n  GlobalVars.fullScreenChangeHandler = handler;\r\n  handler && sendMessageRequestToParent('registerHandler', ['fullScreen']);\r\n}\r\n\r\n/**\r\n * Registers a handler for clicking the app button.\r\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\r\n * @param handler The handler to invoke when the personal app button is clicked in the app bar.\r\n */\r\nexport function registerAppButtonClickHandler(handler: () => void): void {\r\n  ensureInitialized(FrameContexts.content);\r\n\r\n  GlobalVars.appButtonClickHandler = handler;\r\n  handler && sendMessageRequestToParent('registerHandler', ['appButtonClick']);\r\n}\r\n\r\n/**\r\n * Registers a handler for entering hover of the app button.\r\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\r\n * @param handler The handler to invoke when entering hover of the personal app button in the app bar.\r\n */\r\nexport function registerAppButtonHoverEnterHandler(handler: () => void): void {\r\n  ensureInitialized(FrameContexts.content);\r\n\r\n  GlobalVars.appButtonHoverEnterHandler = handler;\r\n  handler && sendMessageRequestToParent('registerHandler', ['appButtonHoverEnter']);\r\n}\r\n\r\n/**\r\n * Registers a handler for exiting hover of the app button.\r\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\r\n * @param handler The handler to invoke when exiting hover of the personal app button in the app bar.\r\n */\r\nexport function registerAppButtonHoverLeaveHandler(handler: () => void): void {\r\n  ensureInitialized(FrameContexts.content);\r\n\r\n  GlobalVars.appButtonHoverLeaveHandler = handler;\r\n  handler && sendMessageRequestToParent('registerHandler', ['appButtonHoverLeave']);\r\n}\r\n\r\n/**\r\n * Registers a handler for user presses of the Team client's back button. Experiences that maintain an internal\r\n * navigation stack should use this handler to navigate the user back within their frame. If an app finds\r\n * that after running its back button handler it cannot handle the event it should call the navigateBack\r\n * method to ask the Teams client to handle it instead.\r\n * @param handler The handler to invoke when the user presses their Team client's back button.\r\n */\r\nexport function registerBackButtonHandler(handler: () => boolean): void {\r\n  ensureInitialized();\r\n\r\n  GlobalVars.backButtonPressHandler = handler;\r\n  handler && sendMessageRequestToParent('registerHandler', ['backButton']);\r\n}\r\n\r\n/**\r\n * @private\r\n * Registers a handler to be called when the page has been requested to load.\r\n * @param handler The handler to invoke when the page is loaded.\r\n */\r\nexport function registerOnLoadHandler(handler: (context: LoadContext) => void): void {\r\n  ensureInitialized();\r\n\r\n  GlobalVars.loadHandler = handler;\r\n  handler && sendMessageRequestToParent('registerHandler', ['load']);\r\n}\r\n\r\n/**\r\n * @private\r\n * Registers a handler to be called before the page is unloaded.\r\n * @param handler The handler to invoke before the page is unloaded. If this handler returns true the page should\r\n * invoke the readyToUnload function provided to it once it's ready to be unloaded.\r\n */\r\nexport function registerBeforeUnloadHandler(handler: (readyToUnload: () => void) => boolean): void {\r\n  ensureInitialized();\r\n\r\n  GlobalVars.beforeUnloadHandler = handler;\r\n  handler && sendMessageRequestToParent('registerHandler', ['beforeUnload']);\r\n}\r\n\r\n/**\r\n * Registers a handler for when the user reconfigurated tab\r\n * @param handler The handler to invoke when the user click on Settings.\r\n */\r\nexport function registerChangeSettingsHandler(handler: () => void): void {\r\n  ensureInitialized(FrameContexts.content);\r\n\r\n  GlobalVars.changeSettingsHandler = handler;\r\n  handler && sendMessageRequestToParent('registerHandler', ['changeSettings']);\r\n}\r\n\r\n/**\r\n * Allows an app to retrieve for this user tabs that are owned by this app.\r\n * If no TabInstanceParameters are passed, the app defaults to favorite teams and favorite channels.\r\n * @param callback The callback to invoke when the {@link TabInstanceParameters} object is retrieved.\r\n * @param tabInstanceParameters OPTIONAL Flags that specify whether to scope call to favorite teams or channels.\r\n */\r\nexport function getTabInstances(\r\n  callback: (tabInfo: TabInformation) => void,\r\n  tabInstanceParameters?: TabInstanceParameters,\r\n): void {\r\n  ensureInitialized();\r\n\r\n  const messageId = sendMessageRequestToParent('getTabInstances', [tabInstanceParameters]);\r\n  GlobalVars.callbacks[messageId] = callback;\r\n}\r\n\r\n/**\r\n * Allows an app to retrieve the most recently used tabs for this user.\r\n * @param callback The callback to invoke when the {@link TabInformation} object is retrieved.\r\n * @param tabInstanceParameters OPTIONAL Ignored, kept for future use\r\n */\r\nexport function getMruTabInstances(\r\n  callback: (tabInfo: TabInformation) => void,\r\n  tabInstanceParameters?: TabInstanceParameters,\r\n): void {\r\n  ensureInitialized();\r\n\r\n  const messageId = sendMessageRequestToParent('getMruTabInstances', [tabInstanceParameters]);\r\n  GlobalVars.callbacks[messageId] = callback;\r\n}\r\n\r\n/**\r\n * Shares a deep link that a user can use to navigate back to a specific state in this page.\r\n * @param deepLinkParameters ID and label for the link and fallback URL.\r\n */\r\nexport function shareDeepLink(deepLinkParameters: DeepLinkParameters): void {\r\n  ensureInitialized(FrameContexts.content, FrameContexts.sidePanel);\r\n\r\n  sendMessageRequestToParent('shareDeepLink', [\r\n    deepLinkParameters.subEntityId,\r\n    deepLinkParameters.subEntityLabel,\r\n    deepLinkParameters.subEntityWebUrl,\r\n  ]);\r\n}\r\n\r\n/**\r\n * execute deep link API.\r\n * @param deepLink deep link.\r\n */\r\nexport function executeDeepLink(deepLink: string, onComplete?: (status: boolean, reason?: string) => void): void {\r\n  ensureInitialized(\r\n    FrameContexts.content,\r\n    FrameContexts.sidePanel,\r\n    FrameContexts.settings,\r\n    FrameContexts.task,\r\n    FrameContexts.stage,\r\n  );\r\n  const messageId = sendMessageRequestToParent('executeDeepLink', [deepLink]);\r\n  GlobalVars.callbacks[messageId] = onComplete ? onComplete : getGenericOnCompleteHandler();\r\n}\r\n\r\nexport function setFrameContext(frameContext: FrameContext): void {\r\n  ensureInitialized(FrameContexts.content);\r\n  sendMessageRequestToParent('setFrameContext', [frameContext]);\r\n}\r\n\r\nexport function initializeWithFrameContext(\r\n  frameContext: FrameContext,\r\n  callback?: () => void,\r\n  validMessageOrigins?: string[],\r\n): void {\r\n  initialize(callback, validMessageOrigins);\r\n  setFrameContext(frameContext);\r\n}\r\n","import { TaskInfo } from './interfaces';\r\nimport { ensureInitialized, sendMessageRequestToParent } from '../internal/internalAPIs';\r\nimport { GlobalVars } from '../internal/globalVars';\r\nimport { FrameContexts } from './constants';\r\nimport { IAppWindow, ChildAppWindow } from './appWindow';\r\n\r\n/**\r\n * Namespace to interact with the task module-specific part of the SDK.\r\n * This object is usable only on the content frame.\r\n */\r\nexport namespace tasks {\r\n  /**\r\n   * Allows an app to open the task module.\r\n   * @param taskInfo An object containing the parameters of the task module\r\n   * @param submitHandler Handler to call when the task module is completed\r\n   */\r\n  export function startTask(taskInfo: TaskInfo, submitHandler?: (err: string, result: string) => void): IAppWindow {\r\n    ensureInitialized(FrameContexts.content, FrameContexts.sidePanel);\r\n\r\n    const messageId = sendMessageRequestToParent('tasks.startTask', [taskInfo]);\r\n    GlobalVars.callbacks[messageId] = submitHandler;\r\n    return new ChildAppWindow();\r\n  }\r\n\r\n  /**\r\n   * Update height/width task info properties.\r\n   * @param taskInfo An object containing width and height properties\r\n   */\r\n  export function updateTask(taskInfo: TaskInfo): void {\r\n    ensureInitialized(FrameContexts.content, FrameContexts.sidePanel, FrameContexts.task);\r\n    const { width, height, ...extra } = taskInfo;\r\n\r\n    if (!Object.keys(extra).length) {\r\n      sendMessageRequestToParent('tasks.updateTask', [taskInfo]);\r\n    } else {\r\n      throw new Error('updateTask requires a taskInfo argument containing only width and height');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Submit the task module.\r\n   * @param result Contains the result to be sent to the bot or the app. Typically a JSON object or a serialized version of it\r\n   * @param appIds Helps to validate that the call originates from the same appId as the one that invoked the task module\r\n   */\r\n  export function submitTask(result?: string | object, appIds?: string | string[]): void {\r\n    ensureInitialized(FrameContexts.content, FrameContexts.sidePanel, FrameContexts.task);\r\n\r\n    // Send tasks.completeTask instead of tasks.submitTask message for backward compatibility with Mobile clients\r\n    sendMessageRequestToParent('tasks.completeTask', [result, Array.isArray(appIds) ? appIds : [appIds]]);\r\n  }\r\n}\r\n","import { media } from '../public/media';\r\n\r\n/**\r\n * Helper function to create a blob from media chunks based on their sequence\r\n */\r\nexport function createFile(assembleAttachment: media.AssembleAttachment[], mimeType: string): Blob {\r\n  if (assembleAttachment == null || mimeType == null || assembleAttachment.length <= 0) {\r\n    return null;\r\n  }\r\n  let file: Blob;\r\n  let sequence = 1;\r\n  assembleAttachment.sort((a, b) => (a.sequence > b.sequence ? 1 : -1));\r\n  assembleAttachment.forEach(item => {\r\n    if (item.sequence == sequence) {\r\n      if (file) {\r\n        file = new Blob([file, item.file], { type: mimeType });\r\n      } else {\r\n        file = new Blob([item.file], { type: mimeType });\r\n      }\r\n      sequence++;\r\n    }\r\n  });\r\n  return file;\r\n}\r\n\r\n/**\r\n * Helper function to convert Media chunks into another object type which can be later assemebled\r\n * Converts base 64 encoded string to byte array and then into an array of blobs\r\n */\r\nexport function decodeAttachment(attachment: media.MediaChunk, mimeType: string): media.AssembleAttachment {\r\n  if (attachment == null || mimeType == null) {\r\n    return null;\r\n  }\r\n  const decoded = atob(attachment.chunk);\r\n  const byteNumbers = new Array(decoded.length);\r\n  for (let i = 0; i < decoded.length; i++) {\r\n    byteNumbers[i] = decoded.charCodeAt(i);\r\n  }\r\n  const byteArray = new Uint8Array(byteNumbers);\r\n  const blob: Blob = new Blob([byteArray], { type: mimeType });\r\n  const assemble: media.AssembleAttachment = {\r\n    sequence: attachment.chunkSequence,\r\n    file: blob,\r\n  };\r\n  return assemble;\r\n}\r\n\r\n/**\r\n * Returns true if the mediaInput params are valid and false otherwise\r\n */\r\nexport function validateSelectMediaInputs(mediaInputs: media.MediaInputs): boolean {\r\n  if (mediaInputs == null || mediaInputs.maxMediaCount > 10) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Returns true if the get Media params are valid and false otherwise\r\n */\r\nexport function validateGetMediaInputs(mimeType: string, format: media.FileFormat, content: string): boolean {\r\n  if (mimeType == null || format == null || format != media.FileFormat.ID || content == null) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Returns true if the view images param is valid and false otherwise\r\n */\r\nexport function validateViewImagesInput(uriList: media.ImageUri[]): boolean {\r\n  if (uriList == null || uriList.length <= 0 || uriList.length > 10) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Returns true if the scan barcode param is valid and false otherwise\r\n */\r\nexport function validateScanBarCodeInput(barCodeConfig: media.BarCodeConfig): boolean {\r\n  if (barCodeConfig) {\r\n    if (\r\n      barCodeConfig.timeOutIntervalInSec === null ||\r\n      barCodeConfig.timeOutIntervalInSec <= 0 ||\r\n      barCodeConfig.timeOutIntervalInSec > 60\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","import { GlobalVars } from '../internal/globalVars';\r\nimport { SdkError, ErrorCode } from './interfaces';\r\nimport { ensureInitialized, sendMessageRequestToParent, isAPISupportedByPlatform } from '../internal/internalAPIs';\r\nimport { FrameContexts } from './constants';\r\n\r\nexport namespace location {\r\n  /**\r\n   * This is the SDK version when location APIs (getLocation and showLocation) are supported.\r\n   */\r\n  export const locationAPIsRequiredVersion = '1.9.0';\r\n\r\n  export interface LocationProps {\r\n    /**\r\n    whether user can alter location or not\r\n    if false, user will be shown current location \r\n    and wouldn't be allowed to alter it\r\n    */\r\n    allowChooseLocation: boolean;\r\n    /**\r\n    whether selected location should be shown to user on map or not.\r\n    If allowChooseLocation is true, this parameter will be ignored by platform.\r\n    If allowChooseLocation is false, and this paramater is not provided, default \r\n    value will be false.\r\n    */\r\n    showMap?: boolean;\r\n  }\r\n\r\n  export interface Location {\r\n    /**\r\n    Latitude of the location\r\n    */\r\n    latitude: number;\r\n    /**\r\n    Longitude of the location\r\n    */\r\n    longitude: number;\r\n    /**\r\n    Accuracy of the coordinates captured\r\n    */\r\n    accuracy?: number;\r\n    /**\r\n    Time stamp when the location was captured\r\n    */\r\n    timestamp?: number;\r\n  }\r\n\r\n  /**\r\n   * Fetches current user coordinates or allows user to choose location on map\r\n   * @param callback Callback to invoke when current user location is fetched\r\n   */\r\n  export function getLocation(props: LocationProps, callback: (error: SdkError, location: Location) => void): void {\r\n    if (!callback) {\r\n      throw new Error('[location.getLocation] Callback cannot be null');\r\n    }\r\n    ensureInitialized(FrameContexts.content, FrameContexts.task);\r\n\r\n    if (!isAPISupportedByPlatform(locationAPIsRequiredVersion)) {\r\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\r\n      callback(oldPlatformError, undefined);\r\n      return;\r\n    }\r\n    if (!props) {\r\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\r\n      callback(invalidInput, undefined);\r\n      return;\r\n    }\r\n    const messageId = sendMessageRequestToParent('location.getLocation', [props]);\r\n    GlobalVars.callbacks[messageId] = callback;\r\n  }\r\n\r\n  /**\r\n   * Shows the location on map corresponding to the given coordinates\r\n   * @param location {@link Location} which needs to be shown on map\r\n   * @param callback Callback to invoke when the location is opened on map\r\n   */\r\n  export function showLocation(location: Location, callback: (error: SdkError, status: boolean) => void): void {\r\n    if (!callback) {\r\n      throw new Error('[location.showLocation] Callback cannot be null');\r\n    }\r\n    ensureInitialized(FrameContexts.content, FrameContexts.task);\r\n\r\n    if (!isAPISupportedByPlatform(locationAPIsRequiredVersion)) {\r\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\r\n      callback(oldPlatformError, undefined);\r\n      return;\r\n    }\r\n    if (!location) {\r\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\r\n      callback(invalidInput, undefined);\r\n      return;\r\n    }\r\n    const messageId = sendMessageRequestToParent('location.showLocation', [location]);\r\n    GlobalVars.callbacks[messageId] = callback;\r\n  }\r\n}\r\n","import { ensureInitialized, sendMessageRequestToParent } from '../internal/internalAPIs';\r\nimport { GlobalVars } from '../internal/globalVars';\r\nimport { SdkError } from './interfaces';\r\n\r\nexport namespace meeting {\r\n  /**\r\n   *\r\n   * Data structure to represent a meeting details.\r\n   */\r\n  export interface IMeetingDetails {\r\n    /**\r\n     * details object\r\n     */\r\n    details: IDetails;\r\n    /**\r\n     * conversation object\r\n     */\r\n    conversation: IConversation;\r\n    /**\r\n     * organizer object\r\n     */\r\n    organizer: IOrganizer;\r\n  }\r\n  export interface IDetails {\r\n    /**\r\n     * event id of the meeting\r\n     */\r\n    id: string;\r\n    /**\r\n     * Scheduled start time of the meeting\r\n     */\r\n    scheduledStartTime: string;\r\n    /**\r\n     * Scheduled end time of the meeting\r\n     */\r\n    scheduledEndTime: string;\r\n    /**\r\n     * url to join the current meeting\r\n     */\r\n    joinUrl?: string;\r\n    /**\r\n     * meeting title name of the meeting\r\n     */\r\n    title?: string;\r\n    /**\r\n     * type of the meeting\r\n     */\r\n    type?: MeetingType;\r\n  }\r\n\r\n  export interface IConversation {\r\n    /**\r\n     * conversation id of the meeting\r\n     */\r\n    id: string;\r\n  }\r\n\r\n  export interface IOrganizer {\r\n    /**\r\n     * organizer id of the meeting\r\n     */\r\n    id?: string;\r\n    /**\r\n     * tenant id of the meeting\r\n     */\r\n    tenantId?: string;\r\n  }\r\n\r\n  export enum MeetingType {\r\n    Unknown = 'Unknown',\r\n    Adhoc = 'Adhoc',\r\n    Scheduled = 'Scheduled',\r\n    Recurring = 'Recurring',\r\n    Broadcast = 'Broadcast',\r\n    MeetNow = 'MeetNow',\r\n  }\r\n\r\n  /**\r\n   * Allows an app to get the incoming audio speaker setting for the meeting user\r\n   * @param callback Callback contains 2 parameters, error and result.\r\n   * error can either contain an error of type SdkError, incase of an error, or null when fetch is successful\r\n   * result can either contain the true/false value, incase of a successful fetch or null when the fetching fails\r\n   * result: True means incoming audio is muted and false means incoming audio is unmuted\r\n   */\r\n  export function getIncomingClientAudioState(\r\n    callback: (error: SdkError | null, result: boolean | null) => void,\r\n  ): void {\r\n    if (!callback) {\r\n      throw new Error('[get incoming client audio state] Callback cannot be null');\r\n    }\r\n    ensureInitialized();\r\n    const messageId = sendMessageRequestToParent('getIncomingClientAudioState');\r\n    GlobalVars.callbacks[messageId] = callback;\r\n  }\r\n\r\n  /**\r\n   * Allows an app to toggle the incoming audio speaker setting for the meeting user from mute to unmute or vice-versa\r\n   * @param callback Callback contains 2 parameters, error and result.\r\n   * error can either contain an error of type SdkError, incase of an error, or null when toggle is successful\r\n   * result can either contain the true/false value, incase of a successful toggle or null when the toggling fails\r\n   * result: True means incoming audio is muted and false means incoming audio is unmuted\r\n   */\r\n  export function toggleIncomingClientAudio(callback: (error: SdkError | null, result: boolean | null) => void): void {\r\n    if (!callback) {\r\n      throw new Error('[toggle incoming client audio] Callback cannot be null');\r\n    }\r\n    ensureInitialized();\r\n    const messageId = sendMessageRequestToParent('toggleIncomingClientAudio');\r\n    GlobalVars.callbacks[messageId] = callback;\r\n  }\r\n\r\n  /**\r\n   * Allows an app to get the meeting details for the meeting\r\n   * @param callback Callback contains 2 parameters, error and meetingDetails.\r\n   * error can either contain an error of type SdkError, incase of an error, or null when get is successful\r\n   * result can either contain a IMeetingDetails value, incase of a successful get or null when the get fails\r\n   */\r\n  export function getMeetingDetails(\r\n    callback: (error: SdkError | null, meetingDetails: IMeetingDetails | null) => void,\r\n  ): void {\r\n    if (!callback) {\r\n      throw new Error('[get meeting details] Callback cannot be null');\r\n    }\r\n    ensureInitialized();\r\n    const messageId = sendMessageRequestToParent('meeting.getMeetingDetails');\r\n    GlobalVars.callbacks[messageId] = callback;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Allows an app to get the authentication token for the anonymous or guest user in the meeting\r\n   * @param callback Callback contains 2 parameters, error and authenticationTokenOfAnonymousUser.\r\n   * error can either contain an error of type SdkError, incase of an error, or null when get is successful\r\n   * authenticationTokenOfAnonymousUser can either contain a string value, incase of a successful get or null when the get fails\r\n   */\r\n  export function getAuthenticationTokenForAnonymousUser(\r\n    callback: (error: SdkError | null, authenticationTokenOfAnonymousUser: string | null) => void,\r\n  ): void {\r\n    if (!callback) {\r\n      throw new Error('[get Authentication Token For AnonymousUser] Callback cannot be null');\r\n    }\r\n    ensureInitialized();\r\n    const messageId = sendMessageRequestToParent('meeting.getAuthenticationTokenForAnonymousUser');\r\n    GlobalVars.callbacks[messageId] = callback;\r\n  }\r\n}\r\n"],"sourceRoot":""}